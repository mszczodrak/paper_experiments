uint8_t radio_tx_power = 31     # in    [31, 27, 23, 19, 15, 11, 7, 3]
                                # for   [0, -1, -3, -5, -7, -10, -15, -25] dBm
uint8_t radio_channel = 26      # in    [11-26]
uint8_t default_radio_channel = 26

# count app parameters
uint16_t dest_node
uint16_t src_node = 0xFFFF

uint16_t event_src = 0xFFFF
uint16_t event_track = 0
uint32_t event_marker = 0

# * designates dominant module
# ! designates daemon

process system_control ! {
	StateSync()
	EED(80, 10, event_marker)
	cc2420(default_radio_channel, radio_tx_power, 65534, 100, 1)
	# channel, power, lpl
}

process booting { nullApp() nullNet() *cc2420(26, 31, 0, 100, 1) }

process empty { nullApp() nullNet() nullAM() }

process setup_dest {
	fixDest(dest_node, 0)
	nullNet() 
	nullAM()
}

process setup_channel {
	fixChannel(radio_channel, 0)
	nullNet() 
	*nullAM()
}

# Application process that does the job
process count {
	counter(5000, 1, src_node, dest_node, 0, event_track)
	ctp(dest_node)
	*cc2420(radio_channel, radio_tx_power, 0, 100, 1)
	# channel, power, sleepInterval, sleepDelay, autoAck
}

event installed { timerMinuteE(10, event_src)
	nullNet()
	nullAM()
}

event time_to_sleep { timerSecondE(40, dest_node, event_marker)
        nullNet()
        nullAM()
}

event time_to_work { timerMinuteE(10, event_src, event_marker)
        nullNet()
        nullAM()
}


#event finished_receiving { noActivityE(4000, dest_node, 0.9, event_track)
#       nullNet()
#       nullAM()
#}

state delayed_network_start { booting }
state running_app { setup_dest setup_channel count }
state sleep { empty }

from delayed_network_start goto running_app when installed
from running_app goto sleep when time_to_sleep
#from running_app goto sleep when finished_receiving
from sleep goto running_app when time_to_work


start delayed_network_start

