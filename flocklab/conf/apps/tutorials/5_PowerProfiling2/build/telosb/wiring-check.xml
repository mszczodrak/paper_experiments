<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="46:FlockLabPowerBlinkC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6c681c7688"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6c681c5020"/></to>
    </wire>
    <wire loc="72:/home/msz/github/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6c681c5020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6c681c3c38"/></to>
    </wire>
    <wire loc="47:FlockLabPowerBlinkC.nc">
      <from><interface-ref name="LedTimer" scoped="" ref="0x2b6c6838e590"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c6839ca60"/></to>
    </wire>
    <wire loc="52:/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c6839ca60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c683bab60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:FlockLabPowerBlinkC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c683a4c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c68546950"/></to>
    </wire>
    <wire loc="51:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c68546950"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c68542d38"/></to>
    </wire>
    <wire loc="49:FlockLabPowerBlinkC.nc">
      <from><interface-ref name="TargetLeds" scoped="" ref="0x2b6c683ad340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c687bcc88"/></to>
    </wire>
    <wire loc="15:../../../tos/sensorboards/flocklab/TargetLedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c687bcc88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c687b5298"/></to>
    </wire>
    <wire loc="124:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c681c24c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c687c8770"/></to>
    </wire>
    <wire loc="124:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c681c24c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c68571a80"/></to>
    </wire>
    <wire loc="53:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c681c24c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c683b24d8"/></to>
    </wire>
    <wire loc="67:/home/msz/github/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6c68368308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6c67d50390"/></to>
    </wire>
    <wire loc="53:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6c67d50390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6c68188940"/></to>
    </wire>
    <wire loc="68:/home/msz/github/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c68368ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c681c43f8"/></to>
    </wire>
    <wire loc="48:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c681c43f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c681be510"/></to>
    </wire>
    <wire loc="71:/home/msz/github/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c68382418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c681c24c8"/></to>
    </wire>
    <wire loc="49:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b6c681bebe0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2b6c681bfe38"/></to>
    </wire>
    <wire loc="46:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2b6c681bfe38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c681dcc88"/></to>
    </wire>
    <wire loc="50:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6c681bd370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c681d5348"/></to>
    </wire>
    <wire loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c681dcc88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c681fe530"/></to>
    </wire>
    <wire loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6c681f6020"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6c681feba0"/></to>
    </wire>
    <wire loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c68120808"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c681fde08"/></to>
    </wire>
    <wire loc="113:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2b6c6823ba20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c68302c80"/></to>
    </wire>
    <wire loc="126:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2b6c68264ba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c682fbc80"/></to>
    </wire>
    <wire loc="108:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2b6c6824c3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c68308c58"/></to>
    </wire>
    <wire loc="149:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2b6c68270020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c68326c58"/></to>
    </wire>
    <wire loc="107:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2b6c68252d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c68308020"/></to>
    </wire>
    <wire loc="148:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2b6c682576e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c68326020"/></to>
    </wire>
    <wire loc="170:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2b6c6826d020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c68332c58"/></to>
    </wire>
    <wire loc="154:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2b6c6825d020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c68321c80"/></to>
    </wire>
    <wire loc="99:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2b6c682351b0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c682abc80"/></to>
    </wire>
    <wire loc="135:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2b6c68272020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c68313c58"/></to>
    </wire>
    <wire loc="134:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2b6c68259a70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c68313020"/></to>
    </wire>
    <wire loc="133:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2b6c68262060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c68315c80"/></to>
    </wire>
    <wire loc="115:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2b6c6824b3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c68300c58"/></to>
    </wire>
    <wire loc="156:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2b6c6826f020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c6831fc58"/></to>
    </wire>
    <wire loc="140:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2b6c68261588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c6830ec80"/></to>
    </wire>
    <wire loc="114:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2b6c68251aa8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c68300020"/></to>
    </wire>
    <wire loc="93:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2b6c6823db88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c68299798"/></to>
    </wire>
    <wire loc="155:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2b6c68256558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c6831f020"/></to>
    </wire>
    <wire loc="106:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2b6c6823c588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c682e8c80"/></to>
    </wire>
    <wire loc="161:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2b6c6825c400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c6833bc80"/></to>
    </wire>
    <wire loc="101:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2b6c68246480"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c682edc58"/></to>
    </wire>
    <wire loc="142:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2b6c68271020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c6830cc58"/></to>
    </wire>
    <wire loc="100:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2b6c68252020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c682ed020"/></to>
    </wire>
    <wire loc="141:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2b6c68258868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c6830c020"/></to>
    </wire>
    <wire loc="163:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2b6c6826e020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c68339c58"/></to>
    </wire>
    <wire loc="147:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2b6c68260a20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c68328c80"/></to>
    </wire>
    <wire loc="120:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></to>
    </wire>
    <wire loc="162:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2b6c682553d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c68339020"/></to>
    </wire>
    <wire loc="128:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2b6c68273060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b6c682f9c58"/></to>
    </wire>
    <wire loc="169:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2b6c68274120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c68332020"/></to>
    </wire>
    <wire loc="127:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2b6c6825ad00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c682f9020"/></to>
    </wire>
    <wire loc="168:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2b6c6825b898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2b6c68334c80"/></to>
    </wire>
    <wire loc="94:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b6c68297658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c68297020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b6c68297c70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2b6c6834e520"/></to>
    </wire>
    <wire loc="96:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b6c682962e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2b6c6834ec68"/></to>
    </wire>
    <wire loc="102:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c682eca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c68299798"/></to>
    </wire>
    <wire loc="103:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c682ea100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c68297020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c68307a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c68299798"/></to>
    </wire>
    <wire loc="110:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c68304100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c68297020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c682ffa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c68299798"/></to>
    </wire>
    <wire loc="117:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c682fd100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c68297020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2b6c682af020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2b6c682af638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2b6c6834c418"/></to>
    </wire>
    <wire loc="123:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2b6c682afc50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2b6c6834cb60"/></to>
    </wire>
    <wire loc="129:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c6831aa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></to>
    </wire>
    <wire loc="130:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c68318100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c68312a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></to>
    </wire>
    <wire loc="137:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c68310100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c6830ba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></to>
    </wire>
    <wire loc="144:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c6832b100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c68325a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></to>
    </wire>
    <wire loc="151:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c68323100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c6831ea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></to>
    </wire>
    <wire loc="158:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c6831c100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c68338a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></to>
    </wire>
    <wire loc="165:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c68336100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c68331a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></to>
    </wire>
    <wire loc="172:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2b6c6832f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b6c67d57ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c681877f8"/></to>
    </wire>
    <wire loc="55:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b6c68185d30"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b6c67d52ba0"/></to>
    </wire>
    <wire loc="54:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6c683bab60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c683af208"/></to>
    </wire>
    <wire loc="58:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6c683af208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c685160c8"/></to>
    </wire>
    <wire loc="57:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c683b24d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c683c9a80"/></to>
    </wire>
    <wire loc="59:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b6c683ca980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6c68531c38"/></to>
    </wire>
    <wire loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c683c9a80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c689548b8"/></to>
    </wire>
    <wire loc="61:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b6c6853a5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c684e4290"/></to>
    </wire>
    <wire loc="62:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c684df648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c684bb2d0"/></to>
    </wire>
    <wire loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c684bb2d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c6894d020"/></to>
    </wire>
    <wire loc="63:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c68530e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c68440d70"/></to>
    </wire>
    <wire loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c68440d70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c6844cc50"/></to>
    </wire>
    <wire loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c689548b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c6897bbd8"/></to>
    </wire>
    <wire loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b6c68988450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c68953128"/></to>
    </wire>
    <wire loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c68953128"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c6897a4f8"/></to>
    </wire>
    <wire loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c6894a1a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c68440d70"/></to>
    </wire>
    <wire loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c68976568"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c68981b88"/></to>
    </wire>
    <wire loc="49:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c68981b88"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c683f8858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c68975bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c6897e2a8"/></to>
    </wire>
    <wire loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c6897e2a8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c683f64d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c68973020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c6897d5b8"/></to>
    </wire>
    <wire loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c6897d5b8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c683f5cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c683f8858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></to>
    </wire>
    <wire loc="59:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c683f64d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2b6c68264ba8"/></to>
    </wire>
    <wire loc="60:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c683f5cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2b6c6825ad00"/></to>
    </wire>
    <wire loc="66:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c683f8858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></to>
    </wire>
    <wire loc="67:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c683f64d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2b6c68261588"/></to>
    </wire>
    <wire loc="68:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c683f5cb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2b6c68258868"/></to>
    </wire>
    <wire loc="70:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c683f8858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></to>
    </wire>
    <wire loc="71:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c683f64d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2b6c68260a20"/></to>
    </wire>
    <wire loc="72:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c683f5cb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2b6c682576e0"/></to>
    </wire>
    <wire loc="74:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c683f8858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></to>
    </wire>
    <wire loc="75:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c683f64d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2b6c6825d020"/></to>
    </wire>
    <wire loc="76:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c683f5cb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2b6c68256558"/></to>
    </wire>
    <wire loc="78:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c683f8858"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></to>
    </wire>
    <wire loc="79:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c683f64d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2b6c6825c400"/></to>
    </wire>
    <wire loc="80:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c683f5cb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2b6c682553d0"/></to>
    </wire>
    <wire loc="82:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c683f8858"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></to>
    </wire>
    <wire loc="83:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c683f64d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2b6c6825b898"/></to>
    </wire>
    <wire loc="84:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c683f5cb8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2b6c68274120"/></to>
    </wire>
    <wire loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b6c68481e20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b6c6843eb98"/></to>
    </wire>
    <wire loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b6c6843eb98"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c68436020"/></to>
    </wire>
    <wire loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c68450020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></to>
    </wire>
    <wire loc="74:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b6c684db5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c67d57ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b6c68534618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c67d57ca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c68571a80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c68542770"/></to>
    </wire>
    <wire loc="54:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c68569110"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b6c68540548"/></to>
    </wire>
    <wire loc="91:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c68540548"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6c6877ac30"/></to>
    </wire>
    <wire loc="55:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c68568338"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b6c68573810"/></to>
    </wire>
    <wire loc="94:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c68573810"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6c68799448"/></to>
    </wire>
    <wire loc="56:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c685634c0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b6c68572998"/></to>
    </wire>
    <wire loc="97:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c68572998"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6c68795cf0"/></to>
    </wire>
    <wire loc="92:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c68779da0"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x2b6c685e3568"/></to>
    </wire>
    <wire loc="500:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2b6c685e3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c687193d8"/></to>
    </wire>
    <wire loc="95:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c687985f8"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x2b6c685e5568"/></to>
    </wire>
    <wire loc="499:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2b6c685e5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6871eca0"/></to>
    </wire>
    <wire loc="98:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c68794e20"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x2b6c685ed568"/></to>
    </wire>
    <wire loc="495:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2b6c685ed568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686ffca0"/></to>
    </wire>
    <wire loc="442:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2b6c68588568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6865aca0"/></to>
    </wire>
    <wire loc="455:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2b6c6859f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6868cca0"/></to>
    </wire>
    <wire loc="531:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2b6c685dd7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6867d3d8"/></to>
    </wire>
    <wire loc="551:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2b6c68614558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6871eca0"/></to>
    </wire>
    <wire loc="532:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2b6c685db660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686a9ca0"/></to>
    </wire>
    <wire loc="460:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2b6c6859b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68682ca0"/></to>
    </wire>
    <wire loc="473:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2b6c685b3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686b4ca0"/></to>
    </wire>
    <wire loc="486:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2b6c685cb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686e9ca0"/></to>
    </wire>
    <wire loc="497:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2b6c685e9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68728ca0"/></to>
    </wire>
    <wire loc="535:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2b6c68602560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686a0ca0"/></to>
    </wire>
    <wire loc="545:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2b6c685f2558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68708ca0"/></to>
    </wire>
    <wire loc="557:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2b6c6860c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c687193d8"/></to>
    </wire>
    <wire loc="445:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2b6c68581568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6867c3d8"/></to>
    </wire>
    <wire loc="536:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2b6c68600560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6869b3d8"/></to>
    </wire>
    <wire loc="450:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2b6c685a9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686723d8"/></to>
    </wire>
    <wire loc="463:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2b6c685c1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686a43d8"/></to>
    </wire>
    <wire loc="476:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2b6c685ad568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686d73d8"/></to>
    </wire>
    <wire loc="489:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2b6c685c5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6870c3d8"/></to>
    </wire>
    <wire loc="440:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2b6c6858c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68663ca0"/></to>
    </wire>
    <wire loc="453:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2b6c685a3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68665d08"/></to>
    </wire>
    <wire loc="466:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2b6c685bb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68697ca0"/></to>
    </wire>
    <wire loc="530:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2b6c685df970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6867d3d8"/></to>
    </wire>
    <wire loc="548:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2b6c6861a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686fa3d8"/></to>
    </wire>
    <wire loc="555:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2b6c6860e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c687193d8"/></to>
    </wire>
    <wire loc="541:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2b6c685f8560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686ed3d8"/></to>
    </wire>
    <wire loc="471:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2b6c685b7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686bddd8"/></to>
    </wire>
    <wire loc="484:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2b6c685cf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686f2ca0"/></to>
    </wire>
    <wire loc="549:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2b6c68618558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68728ca0"/></to>
    </wire>
    <wire loc="538:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2b6c685fe558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686c9ca0"/></to>
    </wire>
    <wire loc="443:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2b6c68586568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686553d8"/></to>
    </wire>
    <wire loc="456:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2b6c6859d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686863d8"/></to>
    </wire>
    <wire loc="493:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2b6c685c3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68708ca0"/></to>
    </wire>
    <wire loc="461:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2b6c68599568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6867d3d8"/></to>
    </wire>
    <wire loc="474:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2b6c685b1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686af3d8"/></to>
    </wire>
    <wire loc="487:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2b6c685c9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686e43d8"/></to>
    </wire>
    <wire loc="498:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2b6c685e7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c687233d8"/></to>
    </wire>
    <wire loc="540:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2b6c685fa560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686f2ca0"/></to>
    </wire>
    <wire loc="438:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2b6c6858e5a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68634e18"/></to>
    </wire>
    <wire loc="451:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2b6c685a7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6866eca0"/></to>
    </wire>
    <wire loc="464:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2b6c685bf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686a0ca0"/></to>
    </wire>
    <wire loc="477:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2b6c685d7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686d3ca0"/></to>
    </wire>
    <wire loc="542:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2b6c685f6560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68697ca0"/></to>
    </wire>
    <wire loc="546:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2b6c685f0558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c687033d8"/></to>
    </wire>
    <wire loc="552:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2b6c68612558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c687193d8"/></to>
    </wire>
    <wire loc="482:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2b6c685d3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686c9ca0"/></to>
    </wire>
    <wire loc="543:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2b6c685f4560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686c13d8"/></to>
    </wire>
    <wire loc="441:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2b6c6858a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6865e3d8"/></to>
    </wire>
    <wire loc="454:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2b6c685a1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686903d8"/></to>
    </wire>
    <wire loc="467:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2b6c685b9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686c13d8"/></to>
    </wire>
    <wire loc="539:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2b6c685fc560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686f63d8"/></to>
    </wire>
    <wire loc="550:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2b6c68616558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c687233d8"/></to>
    </wire>
    <wire loc="472:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2b6c685b5668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686b8478"/></to>
    </wire>
    <wire loc="485:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2b6c685cd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686ed3d8"/></to>
    </wire>
    <wire loc="496:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2b6c685eb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686fa3d8"/></to>
    </wire>
    <wire loc="444:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2b6c68584568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68651ca0"/></to>
    </wire>
    <wire loc="494:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2b6c685ef568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c687033d8"/></to>
    </wire>
    <wire loc="449:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2b6c685ab568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68677ca0"/></to>
    </wire>
    <wire loc="462:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2b6c68597568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686a9ca0"/></to>
    </wire>
    <wire loc="475:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2b6c685af568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686dcca0"/></to>
    </wire>
    <wire loc="488:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2b6c685c7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686dfca0"/></to>
    </wire>
    <wire loc="439:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2b6c6856c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68637478"/></to>
    </wire>
    <wire loc="452:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2b6c685a5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686693d8"/></to>
    </wire>
    <wire loc="465:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2b6c685bd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6869b3d8"/></to>
    </wire>
    <wire loc="478:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2b6c685d5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686cd3d8"/></to>
    </wire>
    <wire loc="534:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2b6c68604548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686a43d8"/></to>
    </wire>
    <wire loc="547:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2b6c6861c558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686ffca0"/></to>
    </wire>
    <wire loc="533:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2b6c685d9560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686a43d8"/></to>
    </wire>
    <wire loc="483:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2b6c685d1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c686f63d8"/></to>
    </wire>
    <wire loc="554:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2b6c68610558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6871eca0"/></to>
    </wire>
    <wire loc="558:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2b6c6860a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c6870c3d8"/></to>
    </wire>
    <wire loc="529:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2b6c685e15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c68682ca0"/></to>
    </wire>
    <wire loc="17:../../../tos/sensorboards/flocklab/TargetLedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c687c8770"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c687b8b68"/></to>
    </wire>
    <wire loc="18:../../../tos/sensorboards/flocklab/TargetLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c687b49d8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b6c687cc2d0"/></to>
    </wire>
    <wire loc="91:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c687cc2d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6c687c6020"/></to>
    </wire>
    <wire loc="19:../../../tos/sensorboards/flocklab/TargetLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c687b3c68"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b6c687cb500"/></to>
    </wire>
    <wire loc="94:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c687cb500"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6c687c27d0"/></to>
    </wire>
    <wire loc="20:../../../tos/sensorboards/flocklab/TargetLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c687b2df0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b6c687c9688"/></to>
    </wire>
    <wire loc="97:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c687c9688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b6c687bd020"/></to>
    </wire>
    <wire loc="92:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c687c5120"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x2b6c685cb568"/></to>
    </wire>
    <wire loc="95:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c687c1908"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x2b6c685c9568"/></to>
    </wire>
    <wire loc="98:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c687f2120"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x2b6c685c7568"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/msz/github/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/msz/github/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/msz/github/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/msz/github/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/msz/github/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/msz/github/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="FlockLabPowerBlinkP" loc="36:FlockLabPowerBlinkP.nc">
      <module/>
    </component>
    <component qname="FlockLabPowerBlinkC.LedTimer" loc="44(FlockLabPowerBlinkC.LedTimer):/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="64:../../../tos/sensorboards/flocklab/LedsP.nc">
      <documentation loc="57:../../../tos/sensorboards/flocklab/LedsP.nc">
        <short>&#10; The implementation of the standard LED mote abstraction.</short>
        <long>&#10; The implementation of the standard LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="59:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <documentation loc="55:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TargetLedsC" loc="9:../../../tos/sensorboards/flocklab/TargetLedsC.nc">
      <documentation loc="2:../../../tos/sensorboards/flocklab/TargetLedsC.nc">
        <short>&#10;&#10; The TinyOS LEDs abstraction for LEDs on the FlockLab target node.</short>
        <long>&#10;&#10; The TinyOS LEDs abstraction for LEDs on the FlockLab target node.&#10;&#10; @author Roman Lim&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TargetLedsP" loc="7:../../../tos/sensorboards/flocklab/TargetLedsP.nc">
      <documentation loc="2:../../../tos/sensorboards/flocklab/TargetLedsP.nc">
        <short>&#10; The implementation of the standard LED mote abstraction.</short>
        <long>&#10; The implementation of the standard LED mote abstraction.&#10;&#10; @author Roman Lim&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TargetPlatformLedsC" loc="59:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <documentation loc="55:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TargetPlatformLedsC.Led0Impl" loc="42(TargetPlatformLedsC.Led0Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TargetPlatformLedsC.Led1Impl" loc="42(TargetPlatformLedsC.Led1Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TargetPlatformLedsC.Led2Impl" loc="42(TargetPlatformLedsC.Led2Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2b6c68269878" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2b6c68269bf0" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2b6c68268020" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2b6c68268378" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2b6c682686d0" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2b6c68268a20" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2b6c68268d88" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2b6c68266150" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2b6c68266500" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2b6c682ad938" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2b6c682adce8" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/msz/github/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b6c68402a20" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b6c68402a20"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b6c68438a68" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b6c68438a68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b6c6844b550" loc="55:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b6c6844b550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b6c6844bcb8" loc="56:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b6c6844bcb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b6c6844a0a8" loc="57:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b6c6844a0a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b6c6844a820" loc="58:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b6c6844a820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b6c6844abc8" loc="59:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b6c68449380" loc="60:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b6c68449380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b6c684794d8" loc="52:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b6c684794d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b6c68479c40" loc="53:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b6c68479c40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b6c68478068" loc="54:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b6c68478068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b6c684787e0" loc="55:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b6c684787e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b6c68478b88" loc="56:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c684b4400" loc="46:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c684b4400"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c684d8b58" loc="46:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c684d8b58"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b6c684d8e68" loc="46:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c68532728" loc="46:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c68532728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2b6c68632998" loc="40:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2b6c68632d20" loc="41:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2b6c68630108" loc="42:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2b6c68630490" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2b6c686307e0" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b6c681c24c8" loc="58:/home/msz/github/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c681c24c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681c2818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6c681c5020" loc="57:/home/msz/github/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b6c681c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c681c5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c681c43f8" loc="42:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c681c43f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681c4748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b6c681bd370" loc="6:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2b6c681bd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681bd6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c681be510" loc="4:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c681be510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681be860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2b6c681bebe0" loc="5:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b6c681bebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b6c681bda10" loc="7:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2b6c681bda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681bdd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c681d5348" loc="2:/home/msz/github/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c681d5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681d5698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2b6c681bfe38" loc="39:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2b6c681bfe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681dc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b6c681f6020" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6c681f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b6c681f6e28"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b6c681f64f8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b6c681f6680"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b6c681f6808"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b6c681f6370"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b6c681f6990"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b6c681f6b18"/>
        <function-ref name="initClocks" scoped="" ref="0x2b6c681f6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c681dcc88" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c681dcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2b6c681feba0" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6c681feba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b6c681fdad8"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b6c681fd1a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b6c681fd330"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b6c681fd4b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b6c681fd020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b6c681fd640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b6c681fd7c8"/>
        <function-ref name="initClocks" scoped="" ref="0x2b6c681fd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b6c681fde08" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c681fde08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6c681fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c681fe530" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c681fe530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c681fe880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2b6c6823ba20" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2b6c6823ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c6823bd70"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c68254020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c682541a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c68254330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c682544b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c68254640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c682547c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68254950"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68254ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2b6c68264ba8" loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2b6c68264ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68263020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c682631a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68263330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c682634b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68263640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c682637c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68263950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68263ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68263c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2b6c6824c3d0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2b6c6824c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6824c720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c6824c8a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c6824ca30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6824cbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6824cd40"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c6824b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2b6c68270020" loc="68:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2b6c68270020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68270370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c682704f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68270680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68270808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68270990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c68270b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2b6c68252d40" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2b6c68252d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682510d8"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c68251260"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c682513e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68251570"/>
        <function-ref name="fired" scoped="" ref="0x2b6c682516f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2b6c682576e0" loc="61:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2b6c682576e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68257a30"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c68257bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68257d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68256020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c682561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2b6c6826d020" loc="71:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2b6c6826d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6826d370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c6826d4f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c6826d680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6826d808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6826d990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c6826db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2b6c6825d020" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2b6c6825d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c6825d370"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c6825d4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6825d680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c6825d808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c6825d990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6825db18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c6825dca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6825de28"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6825c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2b6c682351b0" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2b6c682351b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68235500"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c68235688"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68235810"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c68235998"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68235b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c68235ca8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68235e30"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6823c020"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6823c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2b6c68272020" loc="66:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2b6c68272020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68272370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c682724f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68272680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68272808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68272990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c68272b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2b6c68259a70" loc="59:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2b6c68259a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68259dc0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c68258020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c682581a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68258330"/>
        <function-ref name="fired" scoped="" ref="0x2b6c682584b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2b6c68262060" loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2b6c68262060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c682624b0"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c68262638"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c682627c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c68262948"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68262ad0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c68262c58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68262de0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68261020"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c682611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2b6c6824b3d0" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2b6c6824b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6824b720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c6824b8a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c6824ba30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6824bbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6824bd40"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c68245020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2b6c6826f020" loc="69:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2b6c6826f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6826f370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c6826f4f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c6826f680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6826f808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6826f990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c6826fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2b6c68261588" loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2b6c68261588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c682618d8"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c68261a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68261be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c68261d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68260020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c682601a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68260330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c682604b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68260640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2b6c68251aa8" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2b6c68251aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68251df8"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c6824d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c6824d1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c6824d330"/>
        <function-ref name="fired" scoped="" ref="0x2b6c6824d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2b6c6823db88" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2b6c6823db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c68226020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c682261a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68226330"/>
        <function-ref name="get" scoped="" ref="0x2b6c682264b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c68226640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c682267c8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c68226950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68226ad8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68226c60"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68226de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68244020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2b6c68256558" loc="62:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2b6c68256558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682568a8"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c68256a30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68256bb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68256d40"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68255020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2b6c6823c588" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2b6c6823c588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c6823c8d8"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c6823ca60"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6823cbe8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c6823cd70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c6823b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6823b1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c6823b330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6823b4b8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6823b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2b6c6825c400" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2b6c6825c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c6825c750"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c6825c8d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6825ca60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c6825cbe8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c6825cd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6825b020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c6825b1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6825b330"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6825b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2b6c68246480" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2b6c68246480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682467d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c68246958"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68246ae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68246c68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68246df0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c6824c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2b6c68271020" loc="67:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2b6c68271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68271370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c682714f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68271680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68271808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68271990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c68271b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2b6c68252020" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2b6c68252020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68252370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c682524f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68252680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68252808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68252990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2b6c68258868" loc="60:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2b6c68258868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68258bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c68258d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68257020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c682571a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68257330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2b6c6826e020" loc="70:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2b6c6826e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6826e370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c6826e4f8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c6826e680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6826e808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6826e990"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c6826eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2b6c68260a20" loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2b6c68260a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68260d70"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c6825e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6825e1a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c6825e330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c6825e4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6825e640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c6825e7c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6825e950"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6825ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2b6c68245398" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2b6c68245398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c682456e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68245870"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c682459f8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68245b80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c68245d08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68264020"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c682641a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68264330"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c682644b8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68264640"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c682647c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2b6c682553d0" loc="63:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2b6c682553d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68255720"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c682558a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68255a30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68255bb8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68255d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2b6c68273060" loc="65:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2b6c68273060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682733b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c68273538"/>
        <function-ref name="captured" scoped="" ref="0x2b6c682736c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68273848"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c682739d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c68273b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2b6c68274120" loc="64:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2b6c68274120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68274670"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c682747f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68274980"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68274b08"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68274c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2b6c6825ad00" loc="58:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2b6c6825ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682590a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c68259228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c682593b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68259538"/>
        <function-ref name="fired" scoped="" ref="0x2b6c682596c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2b6c6825b898" loc="57:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2b6c6825b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c6825bbe8"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c6825bd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6825a020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c6825a1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c6825a330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6825a4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c6825a640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6825a7c8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6825a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b6c68297c70" loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b6c68297c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c68296020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b6c68297658" loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b6c68297658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c682979a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b6c682962e8" loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b6c682962e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c68296638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b6c68297020" loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c68297020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c68297390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c68299798" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c68299798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c68299ae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68299c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68299df8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68298020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c682981a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68298330"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c682984b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68298640"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c682987c8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68298950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68298ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2b6c682af638" loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2b6c682af638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c682af988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2b6c682af020" loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2b6c682af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c682af370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2b6c682afc50" loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2b6c682afc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c682ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2b6c682b08a0" loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c682b08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c682b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c682b11e8" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c682b11e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c682b1538"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c682b16c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c682b1848"/>
        <function-ref name="get" scoped="" ref="0x2b6c682b19d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c682b1b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c682b1ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c682b1e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c682b0020"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c682b01a8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c682b0330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c682b04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c682edc58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c682edc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682ec020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c682ec1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c682ec330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c682ec4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c682ec640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c682ec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c682abc80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c682abc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c682ee020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c682ee1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c682ee330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c682ee4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c682ee640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c682ee7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c682ee950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c682eead8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c682eec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c682ea100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c682ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c682ea450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c682ed020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c682ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682ed370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c682ed4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c682ed680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c682ed808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c682ed990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c682eca90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c682eca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c682ecde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c682eb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c682eb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c682eb330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c682eb4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c682eb640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c682eb7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c682eb950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c682ebad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c682ebc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c682ebde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c68308c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c68308c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68307020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c683071a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68307330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c683074b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68307640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c683077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c682e8c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c682e8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68309020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c683091a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68309330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c683094b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68309640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683097c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68309950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68309ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68309c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c68304100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c68304100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c68304450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c68308020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c68308020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68308370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c683084f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68308680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68308808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68308990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c68307a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c68307a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c68307de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68305020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c683051a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68305330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683054b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68305640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c683057c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68305950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68305ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68305c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68305de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c68300c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c68300c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682ff020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c682ff1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c682ff330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c682ff4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c682ff640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c682ff7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c68302c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c68302c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68301020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c683011a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68301330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c683014b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68301640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683017c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68301950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68301ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68301c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c682fd100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c682fd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c682fd450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c68300020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c68300020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68300370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c683004f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68300680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68300808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68300990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c682ffa90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c682ffa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c682ffde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c682fe020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c682fe1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c682fe330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c682fe4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c682fe640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c682fe7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c682fe950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c682fead8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c682fec60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c682fede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c682f9c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c682f9c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6831a020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c6831a1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c6831a330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6831a4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6831a640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c6831a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c682fbc80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c682fbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c682fa020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c682fa1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c682fa330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c682fa4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c682fa640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c682fa7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c682fa950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c682faad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c682fac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c68318100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c68318100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c68318450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c682f9020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c682f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c682f9370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c682f94f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c682f9680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c682f9808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c682f9990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c6831aa90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c6831aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c6831ade0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68319020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c683191a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68319330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683194b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68319640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c683197c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68319950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68319ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68319c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68319de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c68313c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c68313c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68312020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c683121a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68312330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c683124b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68312640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c683127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c68315c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c68315c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68314020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c683141a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68314330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c683144b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68314640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683147c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68314950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68314ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68314c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c68310100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c68310100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c68310450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c68313020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c68313020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68313370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c683134f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68313680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68313808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68313990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c68312a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c68312a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c68312de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68311020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c683111a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68311330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683114b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68311640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c683117c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68311950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68311ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68311c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68311de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c6830cc58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c6830cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6830b020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c6830b1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c6830b330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6830b4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6830b640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c6830b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c6830ec80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c6830ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c6830d020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c6830d1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6830d330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c6830d4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c6830d640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6830d7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c6830d950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6830dad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6830dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c6832b100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c6832b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c6832b450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c6830c020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c6830c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6830c370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c6830c4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c6830c680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c6830c808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c6830c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c6830ba90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c6830ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c6830bde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c6830a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6830a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6830a330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6830a4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6830a640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c6830a7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6830a950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c6830aad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c6830ac60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c6830ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c68326c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c68326c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68325020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c683251a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68325330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c683254b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68325640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c683257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c68328c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c68328c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68327020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c683271a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68327330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c683274b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68327640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683277c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68327950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68327ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68327c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c68323100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c68323100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c68323450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c68326020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c68326020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68326370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c683264f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68326680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68326808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68326990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c68325a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c68325a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c68325de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68324020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c683241a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68324330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683244b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68324640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c683247c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68324950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68324ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68324c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68324de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c6831fc58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c6831fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6831e020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c6831e1a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c6831e330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6831e4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6831e640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c6831e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c68321c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c68321c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68320020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c683201a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68320330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c683204b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68320640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683207c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68320950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68320ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68320c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c6831c100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c6831c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c6831c450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c6831f020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c6831f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6831f370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c6831f4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c6831f680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c6831f808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c6831f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c6831ea90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c6831ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c6831ede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c6831d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6831d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6831d330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6831d4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6831d640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c6831d7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6831d950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c6831dad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c6831dc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c6831dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c68339c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c68339c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68338020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c683381a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68338330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c683384b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68338640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c683387c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c6833bc80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c6833bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c6833a020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c6833a1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6833a330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c6833a4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c6833a640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6833a7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c6833a950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6833aad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6833ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c68336100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c68336100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c68336450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c68339020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c68339020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68339370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c683394f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68339680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68339808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68339990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c68338a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c68338a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c68338de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68337020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c683371a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68337330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683374b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68337640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c683377c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68337950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68337ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68337c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68337de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b6c68332c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2b6c68332c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68331020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2b6c683311a8"/>
        <function-ref name="captured" scoped="" ref="0x2b6c68331330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c683314b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68331640"/>
        <function-ref name="setEdge" scoped="" ref="0x2b6c683317c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2b6c68334c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2b6c68334c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68333020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c683331a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68333330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c683334b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68333640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683337c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68333950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68333ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68333c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2b6c6832f100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2b6c6832f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c6832f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c68332020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2b6c68332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68332370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c683324f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68332680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68332808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68332990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c68331a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c68331a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c68331de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68330020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c683301a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68330330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683304b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68330640"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c683307c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68330950"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68330ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c68330c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68330de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2b6c6834cb60" loc="7:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2b6c6834cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c6834b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2b6c6834e520" loc="4:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2b6c6834e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c6834e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2b6c6834ec68" loc="5:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2b6c6834ec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c6834c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2b6c6834c418" loc="6:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2b6c6834c418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b6c6834c768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b6c68120808" loc="55:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c68120808"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6c68120b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b6c67d52ba0" loc="51:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b6c67d52ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6c67dd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b6c680490f0" loc="52:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2b6c680490f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6c68049440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2b6c681dbaa8" loc="39:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2b6c681dbaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2b6c68367950"/>
        <function-ref name="initTimerB" scoped="" ref="0x2b6c68367020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2b6c683671a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x2b6c68367330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2b6c681dbdf8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2b6c683674b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2b6c68367640"/>
        <function-ref name="initClocks" scoped="" ref="0x2b6c683677c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b6c68382418" loc="60:/home/msz/github/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c68382418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c68382768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6c681c3c38" loc="57:/home/msz/github/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b6c681c3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c68368020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b6c68368ce0" loc="59:/home/msz/github/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c68368ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c683820a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b6c68368308" loc="58:/home/msz/github/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b6c68368308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c68368658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c683687e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c68368968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6c67d57ca0" loc="48:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b6c67d57ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c67d18020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c67d181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6c67d50390" loc="47:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b6c67d50390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c67d506e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c67d50868"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c67d509f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6c681877f8" loc="56:/home/msz/github/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2b6c681877f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c68187b48"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c68187cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b6c68185d30" loc="57:/home/msz/github/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2b6c68185d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6c681840d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6c68188940" loc="55:/home/msz/github/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2b6c68188940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c68188c90"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c68188e18"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c68187020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b6c681c7688" loc="38:FlockLabPowerBlinkP.nc">
      <component-ref qname="FlockLabPowerBlinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2b6c681c7688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c681c79d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedTimer" ref="0x2b6c6838e590" loc="39:FlockLabPowerBlinkP.nc">
      <component-ref qname="FlockLabPowerBlinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedTimer" scoped="" ref="0x2b6c6838e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c6838c8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c6839a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c6839ad10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c6839a8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c6838b1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c6838cd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c6839a470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c6839b118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c6838c320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c6839b5b8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c6839ba58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c683a4c38" loc="40:FlockLabPowerBlinkP.nc">
      <component-ref qname="FlockLabPowerBlinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6c683a4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c6838a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c6838a1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c6838a330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c6838a4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c6838a640"/>
        <function-ref name="get" scoped="" ref="0x2b6c6838a7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c6838a950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c683ad020"/>
        <function-ref name="set" scoped="" ref="0x2b6c6838aad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c6838ac60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c6838ade8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TargetLeds" ref="0x2b6c683ad340" loc="41:FlockLabPowerBlinkP.nc">
      <component-ref qname="FlockLabPowerBlinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TargetLeds" scoped="" ref="0x2b6c683ad340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c683ad690"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c683ad818"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c683ad9a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c683adb28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c683adcb0"/>
        <function-ref name="get" scoped="" ref="0x2b6c683ade38"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c683a2020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c683a2640"/>
        <function-ref name="set" scoped="" ref="0x2b6c683a21a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c683a2330"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c683a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c6839ca60" loc="45:/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="FlockLabPowerBlinkC.LedTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c6839ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c68548d60"/>
        <function-ref name="fired" scoped="" ref="0x2b6c6854a470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c685481c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c6854ad10"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c68547648"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c685471f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c6854a8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c6854b620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c68548790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c6854bac0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c6854a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6c683bab60" loc="49:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b6c683bab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c683b5d98"/>
        <function-ref name="fired" scoped="" ref="0x2b6c683b64d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c683b51f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c683b6d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c683b3688"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c683b3238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c683b6928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c683b76f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c683b57c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c683b7b90"/>
        <function-ref name="stop" scoped="" ref="0x2b6c683b6088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6c683af208" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2b6c683af208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c683d05f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c683d2b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c683d18c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c683d1470"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c683cf020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c683d0a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c683d1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c683afd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c683d0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c683d2238"/>
        <function-ref name="stop" scoped="" ref="0x2b6c683d26d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c683ca980" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b6c683ca980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c683cd560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c683b24d8" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c683b24d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c683b2828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c684bb2d0" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6c684bb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c684b9928"/>
        <function-ref name="fired" scoped="" ref="0x2b6c684ba9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c684b9320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c684bae70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c684b9db0"/>
        <function-ref name="start" scoped="" ref="0x2b6c684ba088"/>
        <function-ref name="stop" scoped="" ref="0x2b6c684ba560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c683c9a80" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c683c9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c683c9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c68953128" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6c68953128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c68951758"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68952808"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c68951150"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c68952c90"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c68951be0"/>
        <function-ref name="start" scoped="" ref="0x2b6c68953e78"/>
        <function-ref name="stop" scoped="" ref="0x2b6c68952380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c689548b8" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c689548b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c68954c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b6c6897d5b8" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c6897d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c6897d908"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c6897da90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c6897dc18"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c6897dda0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c6897c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b6c68981b88" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c68981b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c6897f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c6897f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6897f330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6897f4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6897f640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6897f7c8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c6897f950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6897fad8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c6897fc60"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c6897fde8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c6897e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b6c6897e2a8" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c6897e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c6897e5f8"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c6897e780"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c6897e908"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c6897ea90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c6897ec18"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c6897eda0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c6897d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c6897d1a8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c6897d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2b6c683f5cb8" loc="52:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c683f5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c683f30a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c683f3228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c683f33b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c683f3538"/>
        <function-ref name="fired" scoped="" ref="0x2b6c683f36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2b6c683f8858" loc="50:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c683f8858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c683f8ba8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c683f8d30"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c683f7020"/>
        <function-ref name="get" scoped="" ref="0x2b6c683f71a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683f7330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c683f74b8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c683f7640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c683f77c8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c683f7950"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c683f7ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c683f7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2b6c683f64d0" loc="51:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c683f64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c683f6820"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c683f69a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c683f6b30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c683f6cb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c683f6e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c683f5020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c683f51a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c683f5330"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c683f54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2b6c68973020" loc="49:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2b6c68973020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2b6c68973370"/>
        <function-ref name="setEvent" scoped="" ref="0x2b6c689734f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2b6c68973680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2b6c68973808"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68973990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b6c68976568" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c68976568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c689768b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c68976a40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68976bc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68976d50"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c68975020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c689751a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c68975330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c689754b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68975640"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c689757c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c68975950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c6897a4f8" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6c6897a4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c68977c88"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68978d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c68977680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c689771f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c68976150"/>
        <function-ref name="start" scoped="" ref="0x2b6c689783a8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c68978880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c6897bbd8" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c6897bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c6897a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2b6c68975bd8" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2b6c68975bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2b6c68974020"/>
        <function-ref name="getControl" scoped="" ref="0x2b6c689741a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68974330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2b6c689744b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2b6c68974640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c689747c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b6c68974950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2b6c68974ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c68974c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c68440d70" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6c68440d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c68443af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6843f4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6843f020"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c6843f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2b6c6843eb98" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2b6c6843eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c6843b930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6843a270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6843bdb8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c6843a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2b6c68450020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2b6c68450020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b6c68450370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2b6c684504f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2b6c68450680"/>
        <function-ref name="get" scoped="" ref="0x2b6c68450808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2b6c68450990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68450b18"/>
        <function-ref name="getMode" scoped="" ref="0x2b6c68450ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68450e28"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c6844f020"/>
        <function-ref name="setMode" scoped="" ref="0x2b6c6844f1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2b6c6844f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c68436020" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6c68436020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c68436d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c684526b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68452230"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c68452b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b6c68481e20" loc="63:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2b6c68481e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c6847fbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6847e548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6847e0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c6847e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c6844cc50" loc="62:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6c6844cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c684829f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68481330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c68482e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c684817b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c6894d020" loc="61:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6c6894d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c6894b690"/>
        <function-ref name="fired" scoped="" ref="0x2b6c6894c6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c6894b088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c6894cb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c6894bb18"/>
        <function-ref name="start" scoped="" ref="0x2b6c6894dd70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c6894c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b6c68988450" loc="73:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2b6c68988450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68398150"/>
            <typename><typedef-ref name="T32khz" ref="0x2b6c683984a8"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c68986ab0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68987b30"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c689864a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c68986020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c68985020"/>
        <function-ref name="start" scoped="" ref="0x2b6c689871d0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c689876a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6c6894a1a8" loc="68:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6c6894a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c6898a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c6898a930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c6898a4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c6898adb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b6c684db5e8" loc="74:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2b6c684db5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c684db938"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c684dbac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b6c684df648" loc="49:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2b6c684df648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c684dccc0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c684ddd50"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c684dc6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c684dc230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c684db190"/>
        <function-ref name="start" scoped="" ref="0x2b6c684dd3f0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c684dd8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c684e4290" loc="48:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c684e4290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c684e05f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c684e2ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c684e18c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c684e1470"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c684df020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c684e0a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c684e1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c684e4dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c684e0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c684e22b8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c684e2758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b6c68534618" loc="71:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2b6c68534618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c68534968"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c68534af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b6c6853a5a0" loc="49:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2b6c6853a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c685368f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68537020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c68537d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c685378c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c685341c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c68536d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c68537470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c68538118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c68536320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c685385b8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c68538a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c685160c8" loc="48:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2b6c685160c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c6853b610"/>
        <function-ref name="fired" scoped="" ref="0x2b6c68514a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c6853d900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c6853d490"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c6853a020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c6853ba80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c6853d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c68516c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c6853b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c68514118"/>
        <function-ref name="stop" scoped="" ref="0x2b6c685145d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c68531c38" loc="48:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2b6c68531c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c68530820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6c68530e48" loc="49:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2b6c68530e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2b6c68399980"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c68399cd8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c68552be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c68551548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c685510c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c685519d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c68546950" loc="46:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6c68546950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c68546ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c68546e28"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c68543020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c685431a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c68543330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685434b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c68543640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c68543c60"/>
        <function-ref name="set" scoped="" ref="0x2b6c685437c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c68543950"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c68543ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b6c68569110" loc="70:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b6c68569110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68569460"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685695e8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68569770"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685698f8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68569a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68569c08"/>
        <function-ref name="set" scoped="" ref="0x2b6c68569d90"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68568020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c68542770" loc="66:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c68542770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c68542ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b6c68568338" loc="71:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b6c68568338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68568688"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68568810"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68568998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68568b20"/>
        <function-ref name="get" scoped="" ref="0x2b6c68568ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68568e30"/>
        <function-ref name="set" scoped="" ref="0x2b6c68563020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c68542d38" loc="67:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6c68542d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c6853f0d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c6853f260"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c6853f3e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c6853f570"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c6853f6f8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6853f880"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c6853fa08"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c6853e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6853fb90"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c6853fd18"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c6853e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b6c685634c0" loc="72:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b6c685634c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68563810"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68563998"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68563b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68563ca8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68563e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68562020"/>
        <function-ref name="set" scoped="" ref="0x2b6c685621a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68562330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b6c68540548" loc="60:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b6c68540548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68540898"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68540a20"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68540ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68540d30"/>
        <function-ref name="get" scoped="" ref="0x2b6c68573020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685731a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68573330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b6c68573810" loc="61:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b6c68573810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68573b60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68573ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68573e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68572020"/>
        <function-ref name="get" scoped="" ref="0x2b6c685721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68572330"/>
        <function-ref name="set" scoped="" ref="0x2b6c685724b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68572640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b6c68571a80" loc="63:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c68571a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c68571dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b6c68572998" loc="62:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b6c68572998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68572ce8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68572e70"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68571020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685711a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68571330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685714b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68571640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685717c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2b6c68588568" loc="53:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2b6c68588568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685888b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68588a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68588bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68588d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68587020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68587330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685874b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68587640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685877c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68587950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68587ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68587c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68586020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2b6c6859f568" loc="66:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2b6c6859f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6859f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6859fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6859fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6859fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6859e020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6859e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6859e330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6859e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6859e640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6859e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6859e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6859ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6859ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6859d020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6859d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2b6c685dd7d0" loc="145:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2b6c685dd7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685ddb20"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685ddca8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685dde30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685dc1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685dc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685dc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c685dc640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685dc7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685dc950"/>
        <function-ref name="set" scoped="" ref="0x2b6c685dcad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685dcc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685dcde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685db120"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685db2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2b6c68614558" loc="165:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2b6c68614558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686148a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68614a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68614bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68614d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68613020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68613330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686134b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68613640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686137c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68613950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68613ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68613c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68612020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2b6c685db660" loc="146:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2b6c685db660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685db9b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685dbb38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685dbcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685dbe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685da020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685da1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685da330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685da4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685da640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685da7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685da950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685daad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685dac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685d9020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2b6c6859b568" loc="71:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2b6c6859b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6859b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6859ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6859bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6859bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6859a020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6859a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6859a330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6859a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6859a640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6859a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6859a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6859aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6859ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68599020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2b6c685b3568" loc="84:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2b6c685b3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685b38b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685b3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685b3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685b3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685b2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685b2330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685b24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685b2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685b27c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685b2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685b2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685b2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685b1020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2b6c685cb568" loc="97:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2b6c685cb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685cb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685cba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685cbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685cbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685ca020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685ca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685ca330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685ca4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685ca640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685ca7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685ca950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685caad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685cac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685c9020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2b6c685e9568" loc="108:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2b6c685e9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685e98b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685e9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685e9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685e9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685e8330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685e84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685e8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685e87c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685e8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685e8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685e8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685e7020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2b6c68602560" loc="149:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2b6c68602560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686028b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68602a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68602bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68602d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68601020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68601330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686014b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68601640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686017c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68601950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68601ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68601c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68600020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2b6c685f2558" loc="159:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2b6c685f2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685f28a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685f2a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685f2bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685f2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685f1020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685f11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685f1330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685f14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685f1640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685f17c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685f1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685f1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685f1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685f0020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2b6c6860c560" loc="171:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2b6c6860c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6860c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6860ca38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6860cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6860cd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6860b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6860b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6860b330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6860b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6860b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6860b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6860b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6860bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6860bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6860a020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6860a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2b6c68581568" loc="56:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2b6c68581568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685818b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68581a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68581bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68581d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68580020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68580330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685804b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68580640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685807c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68580950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68580ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68580c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685ab020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2b6c68600560" loc="150:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2b6c68600560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686008b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68600a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68600bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68600d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685ff020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685ff330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685ff4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685ff640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685ff7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685ff950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685ffad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685ffc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685fe020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2b6c685a9568" loc="61:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2b6c685a9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685a98b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685a9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685a9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685a9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685a8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685a8330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685a84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685a8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685a87c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685a8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685a8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685a8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685a7020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2b6c685c1568" loc="74:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2b6c685c1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685c18b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685c1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685c1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685c1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685c0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685c01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685c0330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685c04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685c0640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685c07c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685c0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685c0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685c0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685bf020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2b6c685ad568" loc="87:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2b6c685ad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685ad8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685ada40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685adbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685add50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685d8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685d8330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685d84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685d8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685d87c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685d8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685d8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685d8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685d7020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2b6c685c5568" loc="100:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2b6c685c5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685c58b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685c5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685c5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685c5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685c4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685c4330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685c44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685c4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685c47c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685c4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685c4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685c4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685c3020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2b6c685e3568" loc="111:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2b6c685e3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685e38b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685e3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685e3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685e3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685e2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685e21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685e2330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685e24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685e2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685e27c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685e2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685e2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685e2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685e1020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2b6c6858c568" loc="51:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2b6c6858c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6858c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6858ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6858cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6858cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6858b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6858b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6858b330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6858b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6858b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6858b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6858b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6858bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6858bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6858a020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6858a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2b6c685a3568" loc="64:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2b6c685a3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685a39b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685a3b40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685a3cc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685a3e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685a2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685a2330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685a24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685a2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685a27c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685a2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685a2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685a2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685a1020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2b6c685bb568" loc="77:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2b6c685bb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685bb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685bba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685bbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685bbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685ba020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685ba330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685ba4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685ba640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685ba7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685ba950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685baad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685bac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685b9020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685b91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2b6c685df970" loc="144:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2b6c685df970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685dfcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685dfe48"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685de020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685de1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685de330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685de4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685de640"/>
        <function-ref name="get" scoped="" ref="0x2b6c685de7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685de950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685dead8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685dec60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685dede8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685dd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685dd2a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685dd430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2b6c6861a558" loc="162:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2b6c6861a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6861a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6861aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6861abb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6861ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68619020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68619330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686194b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68619640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686197c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68619950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68619ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68619c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68618020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2b6c6860e558" loc="169:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2b6c6860e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6860e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6860ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6860ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6860ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6860d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6860d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6860d330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6860d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6860d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6860d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6860d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6860dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6860dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6860c020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6860c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2b6c685f8560" loc="155:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2b6c685f8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685f88b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685f8a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685f8bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685f8d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685f7020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685f7330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685f74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685f7640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685f77c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685f7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685f7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685f7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685f6020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2b6c685b7568" loc="82:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2b6c685b7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685b7ab8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685b7c40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685b7dc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685b61a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685b6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685b64b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c685b6640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685b67c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685b6950"/>
        <function-ref name="set" scoped="" ref="0x2b6c685b6ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685b6c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685b6de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685b5120"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685b52a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2b6c685cf568" loc="95:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2b6c685cf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685cf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685cfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685cfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685cfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685ce020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685ce330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685ce4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685ce640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685ce7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685ce950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685cead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685cec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685cd020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2b6c685ed568" loc="106:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2b6c685ed568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685ed8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685eda40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685edbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685edd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685ec330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685ec4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685ec640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685ec7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685ec950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685ecad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685ecc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685eb020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2b6c68618558" loc="163:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2b6c68618558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686188a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68618a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68618bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68618d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68617020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68617330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686174b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68617640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686177c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68617950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68617ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68617c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68616020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2b6c685fe558" loc="152:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2b6c685fe558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685fe8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685fea30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685febb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685fed40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685fd020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685fd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685fd330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685fd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685fd640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685fd7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685fd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685fdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685fdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685fc020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2b6c68586568" loc="54:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2b6c68586568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685868b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68586a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68586bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68586d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68585020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68585330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685854b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68585640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685857c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68585950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68585ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68585c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68584020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2b6c6859d568" loc="67:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2b6c6859d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6859d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6859da40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6859dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6859dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6859c020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6859c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6859c330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6859c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6859c640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6859c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6859c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6859cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6859cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6859b020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6859b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2b6c685c3568" loc="104:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2b6c685c3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685c38b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685c3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685c3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685c3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685c2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685c21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685c2330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685c24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685c2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685c27c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685c2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685c2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685c2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685ef020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2b6c68599568" loc="72:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2b6c68599568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685998b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68599a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68599bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68599d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68598020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68598330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685984b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68598640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685987c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68598950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68598ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68598c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68597020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2b6c685b1568" loc="85:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2b6c685b1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685b18b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685b1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685b1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685b1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685b0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685b01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685b0330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685b04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685b0640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685b07c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685b0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685b0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685b0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685af020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2b6c685c9568" loc="98:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2b6c685c9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685c98b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685c9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685c9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685c9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685c8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685c81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685c8330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685c84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685c8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685c87c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685c8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685c8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685c8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685c7020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2b6c685e7568" loc="109:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2b6c685e7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685e78b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685e7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685e7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685e7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685e61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685e6330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685e64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685e6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685e67c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685e6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685e6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685e6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685e5020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2b6c685fa560" loc="154:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2b6c685fa560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685fa8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685faa38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685fabc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685fad48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685f9020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685f9330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685f94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685f9640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685f97c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685f9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685f9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685f9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685f8020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2b6c6858e5a8" loc="49:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2b6c6858e5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6858e8f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6858ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6858ec08"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6858ed90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6856d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6856d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6856d330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6856d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6856d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6856d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6856d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6856dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6856dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6856c020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6856c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2b6c685a7568" loc="62:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2b6c685a7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685a78b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685a7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685a7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685a7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685a6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685a61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685a6330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685a64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685a6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685a67c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685a6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685a6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685a6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685a5020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685a51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2b6c685bf568" loc="75:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2b6c685bf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685bf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685bfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685bfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685bfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685be020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685be1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685be330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685be4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685be640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685be7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685be950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685bead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685bec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685bd020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2b6c685d7568" loc="88:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2b6c685d7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685d78b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685d7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685d7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685d7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685d6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685d6330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685d64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685d6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685d67c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685d6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685d6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685d6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685d5020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2b6c685f6560" loc="156:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2b6c685f6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685f68b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685f6a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685f6bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685f6d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685f5020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685f5330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685f54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685f5640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685f57c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685f5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685f5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685f5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685f4020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2b6c685f0558" loc="160:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2b6c685f0558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685f08a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685f0a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685f0bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685f0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6861d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6861d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6861d330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6861d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6861d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6861d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6861d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6861dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6861dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6861c020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6861c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2b6c68612558" loc="166:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2b6c68612558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686128a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68612a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68612bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68612d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68611020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68611330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686114b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68611640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686117c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68611950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68611ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68611c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68610020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2b6c685d3568" loc="93:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2b6c685d3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685d38b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685d3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685d3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685d3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685d2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685d21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685d2330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685d24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685d2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685d27c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685d2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685d2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685d2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685d1020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2b6c685f4560" loc="157:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2b6c685f4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685f48b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685f4a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685f4bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685f4d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685f3020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685f31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685f3330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685f34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685f3640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685f37c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685f3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685f3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685f3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685f2020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2b6c6858a568" loc="52:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2b6c6858a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6858a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6858aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6858abc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6858ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68589020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68589330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685894b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68589640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685897c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68589950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68589ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68589c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68588020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2b6c685a1568" loc="65:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2b6c685a1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685a18b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685a1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685a1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685a1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685a0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685a01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685a0330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685a04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685a0640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685a07c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685a0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685a0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685a0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6859f020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6859f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2b6c685b9568" loc="78:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2b6c685b9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685b98b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685b9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685b9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685b9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685b8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685b81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685b8330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685b84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685b8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685b87c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685b8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685b8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685b8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685b7020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2b6c685fc560" loc="153:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2b6c685fc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685fc8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685fca38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685fcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685fcd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685fb020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685fb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685fb330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685fb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685fb640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685fb7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685fb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685fbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685fbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685fa020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2b6c68616558" loc="164:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2b6c68616558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686168a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68616a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68616bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68616d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68615020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68615330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686154b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68615640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686157c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68615950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68615ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68615c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68614020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2b6c685b5668" loc="83:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2b6c685b5668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685b59b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685b5b40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685b5cc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685b5e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685b4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685b4330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685b44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685b4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685b47c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685b4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685b4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685b4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685b3020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2b6c685cd568" loc="96:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2b6c685cd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685cd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685cda40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685cdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685cdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685cc020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685cc330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685cc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685cc640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685cc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685cc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685ccad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685ccc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685cb020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2b6c685eb568" loc="107:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2b6c685eb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685eb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685eba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685ebbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685ebd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685ea330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685ea4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685ea640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685ea7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685ea950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685eaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685eac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685e9020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2b6c68584568" loc="55:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2b6c68584568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685848b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68584a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68584bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68584d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68582020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68582330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685824b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68582640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685827c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68582950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68582ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68582c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68581020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2b6c685ef568" loc="105:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2b6c685ef568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685ef8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685efa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685efbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685efd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685ee330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685ee4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685ee640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685ee7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685ee950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685eead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685eec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685ed020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2b6c685ab568" loc="60:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2b6c685ab568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685ab8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685aba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685abbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685abd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685aa020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685aa330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685aa4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685aa640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685aa7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685aa950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685aaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685aac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685a9020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2b6c68597568" loc="73:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2b6c68597568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685978b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68597a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68597bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68597d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68596020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68596330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685964b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68596640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685967c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68596950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68596ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68596c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685c1020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2b6c685af568" loc="86:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2b6c685af568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685af8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685afa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685afbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685afd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685ae020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685ae330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685ae4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685ae640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685ae7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685ae950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685aead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685aec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685ad020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2b6c685c7568" loc="99:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2b6c685c7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685c78b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685c7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685c7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685c7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685c6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685c61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685c6330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685c64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685c6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685c67c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685c6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685c6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685c6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685c5020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2b6c685e5568" loc="110:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2b6c685e5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685e58b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685e5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685e5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685e5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685e41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685e4330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685e44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685e4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685e47c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685e4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685e4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685e4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685e3020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2b6c6856c568" loc="50:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2b6c6856c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6856c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6856ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6856cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6856cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6858d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6858d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6858d330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6858d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6858d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6858d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6858d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6858dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6858dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6858c020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6858c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2b6c685a5568" loc="63:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2b6c685a5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685a58b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685a5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685a5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685a5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685a4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685a41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685a4330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685a44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685a4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685a47c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685a4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685a4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685a4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685a3020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2b6c685bd568" loc="76:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2b6c685bd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685bd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685bda40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685bdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685bdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685bc020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685bc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685bc330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685bc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685bc640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685bc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685bc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685bcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685bcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685bb020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2b6c685d5568" loc="89:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2b6c685d5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685d58b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685d5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685d5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685d5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685d4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685d41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685d4330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685d44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685d4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685d47c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685d4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685d4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685d4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685d3020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2b6c68604548" loc="148:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2b6c68604548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68604898"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68604a20"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68604ba8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68604d30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68603020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68603330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686034b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68603640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686037c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68603950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68603ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68603c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68602020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2b6c6861c558" loc="161:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2b6c6861c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6861c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6861ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6861cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6861cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6861b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6861b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6861b330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6861b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6861b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6861b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6861b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6861bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6861bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6861a020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6861a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2b6c685d9560" loc="147:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2b6c685d9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685d98b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685d9a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685d9bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685d9d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68605020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68605330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686054b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68605640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686057c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68605950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68605ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68605c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68604020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2b6c685d1568" loc="94:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2b6c685d1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685d18b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685d1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685d1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685d1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685d0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685d0330"/>
        <function-ref name="get" scoped="" ref="0x2b6c685d04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685d0640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685d07c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c685d0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685d0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685d0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685cf020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2b6c68610558" loc="168:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2b6c68610558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686108a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68610a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68610bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68610d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6860f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6860f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6860f330"/>
        <function-ref name="get" scoped="" ref="0x2b6c6860f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6860f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6860f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6860f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6860fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6860fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6860e020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6860e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2b6c6860a568" loc="172:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2b6c6860a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6860a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6860aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6860abc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6860ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68609020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68609330"/>
        <function-ref name="get" scoped="" ref="0x2b6c686094b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68609640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686097c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68609950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68609ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68609c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68608020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2b6c685e15b8" loc="143:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2b6c685e15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c685e1d08"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c685e0020"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c685e01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c685e0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c685e04b8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c685e0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c685e07c8"/>
        <function-ref name="get" scoped="" ref="0x2b6c685e0950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c685e0ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c685e0c60"/>
        <function-ref name="set" scoped="" ref="0x2b6c685e0de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c685df020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c685df1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c685df430"/>
        <function-ref name="clr" scoped="" ref="0x2b6c685df5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68634e18" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68634e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6863b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6863b330"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6863b4b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6863b640"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6863b7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6863b950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6863bad8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6863bc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6863bde8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6863a020"/>
        <function-ref name="set" scoped="" ref="0x2b6c6863a1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6863a330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6863a4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6863a740"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6863a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68637478" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68637478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686377c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68637950"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68637ad8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68637c60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68637de8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68636020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686361a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68636330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686364b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68636640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686367c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68636950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68636ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68636d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68635020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68663ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68663ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68662020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686621a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68662330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686624b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68662640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686627c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68662950"/>
        <function-ref name="get" scoped="" ref="0x2b6c68662ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68662c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68662de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68661020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686611a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68661330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686615b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68661740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6865e3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6865e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6865e728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6865e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6865ea38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6865ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6865ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6865d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6865d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6865d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6865d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6865d640"/>
        <function-ref name="set" scoped="" ref="0x2b6c6865d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6865d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6865dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6865dd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6865c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6865aca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6865aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68659020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686591a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68659330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686594b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68659640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686597c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68659950"/>
        <function-ref name="get" scoped="" ref="0x2b6c68659ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68659c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68659de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68658020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686581a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68658330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686585b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68658740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686553d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686553d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68655728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686558b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68655a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68655bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68655d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68654020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686541a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68654330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686544b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68654640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686547c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68654950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68654ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68654d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68653020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68651ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68651ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68650020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686501a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68650330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686504b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68650640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686507c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68650950"/>
        <function-ref name="get" scoped="" ref="0x2b6c68650ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68650c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68650de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6864f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6864f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6864f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6864f5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6864f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6867c3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6867c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6867c728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6867c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6867ca38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6867cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6867cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6867a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6867a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6867a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6867a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6867a640"/>
        <function-ref name="set" scoped="" ref="0x2b6c6867a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6867a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6867aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6867ad60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68679020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68677ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68677ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68676020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686761a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68676330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686764b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68676640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686767c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68676950"/>
        <function-ref name="get" scoped="" ref="0x2b6c68676ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68676c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68676de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68675020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686751a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68675330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686755b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68675740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686723d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686723d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68672728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686728b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68672a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68672bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68672d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68671020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686711a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68671330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686714b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68671640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686717c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68671950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68671ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68671d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68670020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6866eca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6866eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6866d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6866d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6866d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6866d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6866d640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6866d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6866d950"/>
        <function-ref name="get" scoped="" ref="0x2b6c6866dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6866dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6866dde8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6866c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6866c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6866c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6866c5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6866c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686693d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686693d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68669728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686698b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68669a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68669bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68669d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68668020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686681a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68668330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686684b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68668640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686687c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68668950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68668ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68668d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68667020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68665d08" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68665d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686940a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68694228"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686943b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68694538"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686946c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68694848"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686949d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c68694b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68694ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68694e68"/>
        <function-ref name="set" scoped="" ref="0x2b6c68693020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686931a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68693330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686935b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68693740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686903d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686903d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68690728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686908b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68690a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68690bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68690d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6868f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6868f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6868f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6868f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6868f640"/>
        <function-ref name="set" scoped="" ref="0x2b6c6868f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6868f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6868fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6868fd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6868e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6868cca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6868cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6868b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6868b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6868b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6868b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6868b640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6868b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6868b950"/>
        <function-ref name="get" scoped="" ref="0x2b6c6868bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6868bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6868bde8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6868a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6868a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6868a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6868a5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6868a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686863d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686863d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68686728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686868b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68686a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68686bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68686d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68685020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686851a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68685330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686854b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68685640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686857c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68685950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68685ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68685d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68684020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68682ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68682ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68681020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686811a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68681330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686814b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68681640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686817c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68681950"/>
        <function-ref name="get" scoped="" ref="0x2b6c68681ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68681c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68681de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68680020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686801a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68680330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686805b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68680740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6867d3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6867d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6867d728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6867d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6867da38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6867dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6867dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686ac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686ac1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686ac330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686ac4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686ac640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686ac7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686ac950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686acad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686acd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686a9ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686a9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686a8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686a81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686a8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686a84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686a8640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686a87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686a8950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686a8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686a8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686a8de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686a7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686a71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686a7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686a75b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686a7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686a43d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686a43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686a4728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686a48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686a4a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686a4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686a4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686a31a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686a3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686a34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686a3640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686a37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686a3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686a3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686a3d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686a0ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686a0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6869f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6869f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6869f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6869f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6869f640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6869f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6869f950"/>
        <function-ref name="get" scoped="" ref="0x2b6c6869fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6869fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6869fde8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6869e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6869e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6869e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6869e5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6869e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6869b3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6869b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6869b728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6869b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6869ba38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6869bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6869bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6869a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6869a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6869a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6869a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6869a640"/>
        <function-ref name="set" scoped="" ref="0x2b6c6869a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6869a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6869aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6869ad60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68699020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68697ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68697ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68695020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686951a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68695330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686954b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68695640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686957c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68695950"/>
        <function-ref name="get" scoped="" ref="0x2b6c68695ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68695c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68695de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686c4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686c41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686c4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686c45b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686c4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686c13d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686c13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686c1728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686c18b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686c1a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686c1bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686c1d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686c0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686c01a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686c0330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686c04b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686c0640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686c07c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686c0950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686c0ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686c0d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686bddd8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686bddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686bc170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686bc2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686bc480"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686bc608"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686bc790"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686bc918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686bcaa0"/>
        <function-ref name="get" scoped="" ref="0x2b6c686bcc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686bcdb0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686bb020"/>
        <function-ref name="set" scoped="" ref="0x2b6c686bb1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686bb330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686bb4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686bb740"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686bb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686b8478" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686b8478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686b87c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686b8950"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686b8ad8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686b8c60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686b8de8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686b7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686b71a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686b7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686b74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686b7640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686b77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686b7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686b7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686b7d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686b4ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686b4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686b3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686b31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686b3330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686b34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686b3640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686b37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686b3950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686b3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686b3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686b3de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686b2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686b21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686b2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686b25b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686b2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686af3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686af3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686af728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686af8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686afa38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686afbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686afd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686ae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686ae1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686ae330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686ae4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686ae640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686ae7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686ae950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686aead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686aed60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686dcca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686dcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686db020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686db1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686db330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686db4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686db640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686db7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686db950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686dbad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686dbc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686dbde8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686da020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686da1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686da330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686da5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686da740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686d73d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686d73d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686d7728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686d78b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686d7a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686d7bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686d7d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686d61a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686d6330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686d64b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686d6640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686d67c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686d6950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686d6ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686d6d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686d3ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686d3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686d1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686d11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686d1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686d14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686d1640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686d17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686d1950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686d1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686d1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686d1de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686d0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686d01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686d0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686d05b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686d0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686cd3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686cd3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686cd728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686cd8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686cda38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686cdbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686cdd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686cc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686cc1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686cc330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686cc4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686cc640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686cc7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686cc950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686ccad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686ccd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686c9ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686c9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686c8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686c81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686c8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686c84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686c8640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686c87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686c8950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686c8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686c8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686c8de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686c7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686c71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686c7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686c75b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686c7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686f63d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686f63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686f6728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686f68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686f6a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686f6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686f6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686f51a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686f5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686f54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686f5640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686f57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686f5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686f5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686f5d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686f2ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686f2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686f1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686f11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686f1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686f14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686f1640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686f17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686f1950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686f1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686f1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686f1de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686f0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686f01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686f0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686f05b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686f0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686ed3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686ed3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686ed728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686ed8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686eda38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686edbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686edd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686ec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686ec1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686ec330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686ec4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686ec640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686ec7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686ec950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686ecad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686ecd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686e9ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686e9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686e8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686e81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686e8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686e84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686e8640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686e87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686e8950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686e8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686e8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686e8de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686e7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686e71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686e7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686e75b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686e7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686e43d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686e43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686e4728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686e48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686e4a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686e4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686e4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686e31a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686e3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686e34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686e3640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686e37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686e3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686e3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686e3d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686dfca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686dfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686de020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686de1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686de330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686de4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686de640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686de7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686de950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686dead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686dec60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686dede8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6870f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6870f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6870f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6870f5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6870f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6870c3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6870c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6870c728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6870c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6870ca38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6870cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6870cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6870b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6870b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c6870b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6870b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6870b640"/>
        <function-ref name="set" scoped="" ref="0x2b6c6870b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6870b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6870bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6870bd60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6870a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68708ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68708ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68707020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687071a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68707330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687074b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68707640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c687077c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68707950"/>
        <function-ref name="get" scoped="" ref="0x2b6c68707ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68707c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68707de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68706020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c687061a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68706330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c687065b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68706740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c687033d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c687033d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68703728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687038b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68703a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68703bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68703d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68702020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687021a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68702330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c687024b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68702640"/>
        <function-ref name="set" scoped="" ref="0x2b6c687027c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68702950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68702ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68702d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68701020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686ffca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686ffca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686fe020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686fe1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686fe330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686fe4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686fe640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686fe7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686fe950"/>
        <function-ref name="get" scoped="" ref="0x2b6c686fead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686fec60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686fede8"/>
        <function-ref name="set" scoped="" ref="0x2b6c686fd020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686fd1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686fd330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686fd5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686fd740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c686fa3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c686fa3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c686fa728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c686fa8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c686faa38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c686fabc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c686fad48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c686f9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c686f91a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c686f9330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c686f94b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c686f9640"/>
        <function-ref name="set" scoped="" ref="0x2b6c686f97c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c686f9950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c686f9ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c686f9d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c686f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c68728ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c68728ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68727020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687271a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68727330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687274b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68727640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c687277c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68727950"/>
        <function-ref name="get" scoped="" ref="0x2b6c68727ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68727c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68727de8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68726020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c687261a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68726330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c687265b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68726740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c687233d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c687233d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68723728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687238b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68723a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68723bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68723d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68721020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687211a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68721330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c687214b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68721640"/>
        <function-ref name="set" scoped="" ref="0x2b6c687217c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68721950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68721ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68721d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68720020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c6871eca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c6871eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6871d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6871d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6871d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6871d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6871d640"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6871d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6871d950"/>
        <function-ref name="get" scoped="" ref="0x2b6c6871dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6871dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6871dde8"/>
        <function-ref name="set" scoped="" ref="0x2b6c6871c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6871c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6871c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6871c5b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6871c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c687193d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2b6c687193d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68719728"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687198b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68719a38"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68719bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68719d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68718020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687181a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68718330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c687184b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68718640"/>
        <function-ref name="set" scoped="" ref="0x2b6c687187c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68718950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68718ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68718d60"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68717020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6c68779da0" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c68779da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c6879c170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c6879c2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c6879c480"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c6879c608"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c6879c790"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c6879c918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c6879caa0"/>
        <function-ref name="get" scoped="" ref="0x2b6c6879cc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c6879cdb0"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c6879b020"/>
        <function-ref name="set" scoped="" ref="0x2b6c6879b1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c6879b330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c6879b4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c6879b740"/>
        <function-ref name="clr" scoped="" ref="0x2b6c6879b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6c6877ac30" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6c6877ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68779020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687791a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68779330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687794b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68779640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687797c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68779950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68779ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6c687985f8" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c687985f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68798948"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68798ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c68798c58"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68798de0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68797020"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c687971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68797330"/>
        <function-ref name="get" scoped="" ref="0x2b6c687974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68797640"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c687977c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c68797950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68797ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c68797c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68796020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6c68799448" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6c68799448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c68799798"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68799920"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68799aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68799c30"/>
        <function-ref name="get" scoped="" ref="0x2b6c68799db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68798020"/>
        <function-ref name="set" scoped="" ref="0x2b6c687981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68798330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6c68794e20" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c68794e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687931a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68793330"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c687934b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c68793640"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687937c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c68793950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68793ad8"/>
        <function-ref name="get" scoped="" ref="0x2b6c68793c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c68793de8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c68792020"/>
        <function-ref name="set" scoped="" ref="0x2b6c687921a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c68792330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c687924b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c68792740"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687928c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6c68795cf0" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6c68795cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687940a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c68794228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687943b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c68794538"/>
        <function-ref name="get" scoped="" ref="0x2b6c687946c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c68794848"/>
        <function-ref name="set" scoped="" ref="0x2b6c687949d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c68794b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c687bcc88" loc="10:../../../tos/sensorboards/flocklab/TargetLedsC.nc">
      <component-ref qname="TargetLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6c687bcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c687b9020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c687b91a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c687b9330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c687b94b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c687b9640"/>
        <function-ref name="get" scoped="" ref="0x2b6c687b97c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c687b9950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c687b8020"/>
        <function-ref name="set" scoped="" ref="0x2b6c687b9ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c687b9c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c687b9de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b6c687b49d8" loc="13:../../../tos/sensorboards/flocklab/TargetLedsP.nc">
      <component-ref qname="TargetLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b6c687b49d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687b4d28"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687b3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687b31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687b3330"/>
        <function-ref name="get" scoped="" ref="0x2b6c687b34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687b3640"/>
        <function-ref name="set" scoped="" ref="0x2b6c687b37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687b3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c687b8b68" loc="9:../../../tos/sensorboards/flocklab/TargetLedsP.nc">
      <component-ref qname="TargetLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c687b8b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c687b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b6c687b3c68" loc="14:../../../tos/sensorboards/flocklab/TargetLedsP.nc">
      <component-ref qname="TargetLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b6c687b3c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687b2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687b21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687b2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687b24b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c687b2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687b27c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c687b2950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687b2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c687b5298" loc="10:../../../tos/sensorboards/flocklab/TargetLedsP.nc">
      <component-ref qname="TargetLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2b6c687b5298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c687b55e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c687b5770"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c687b58f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c687b5a80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c687b5c08"/>
        <function-ref name="get" scoped="" ref="0x2b6c687b5d90"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c687b4020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c687b4640"/>
        <function-ref name="set" scoped="" ref="0x2b6c687b41a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c687b4330"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c687b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b6c687b2df0" loc="15:../../../tos/sensorboards/flocklab/TargetLedsP.nc">
      <component-ref qname="TargetLedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b6c687b2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687b1170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687b12f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687b1480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687b1608"/>
        <function-ref name="get" scoped="" ref="0x2b6c687b1790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687b1918"/>
        <function-ref name="set" scoped="" ref="0x2b6c687b1aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687b1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b6c687cc2d0" loc="60:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <component-ref qname="TargetPlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2b6c687cc2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687cc620"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687cc7a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687cc930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687ccab8"/>
        <function-ref name="get" scoped="" ref="0x2b6c687ccc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687ccdc8"/>
        <function-ref name="set" scoped="" ref="0x2b6c687cb020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b6c687cb500" loc="61:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <component-ref qname="TargetPlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2b6c687cb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687cb850"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687cb9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687cbb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687cbce8"/>
        <function-ref name="get" scoped="" ref="0x2b6c687cbe70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687c9020"/>
        <function-ref name="set" scoped="" ref="0x2b6c687c91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687c9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b6c687c8770" loc="63:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <component-ref qname="TargetPlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2b6c687c8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c687c8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b6c687c9688" loc="62:../../../tos/sensorboards/flocklab/TargetPlatformLedsC.nc">
      <component-ref qname="TargetPlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2b6c687c9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687c99d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687c9b60"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687c9ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687c9e70"/>
        <function-ref name="get" scoped="" ref="0x2b6c687c8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687c81a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c687c8330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687c84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6c687c5120" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="TargetPlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c687c5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687c5470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687c55f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c687c5780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687c5908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687c5a90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c687c5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687c5da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c687c4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c687c41a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c687c4330"/>
        <function-ref name="set" scoped="" ref="0x2b6c687c44b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c687c4640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c687c47c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c687c4a50"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687c4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6c687c6020" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="TargetPlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6c687c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687c6370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687c64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687c6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687c6808"/>
        <function-ref name="get" scoped="" ref="0x2b6c687c6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687c6b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c687c6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687c6e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6c687c1908" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="TargetPlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c687c1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687c1c58"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687c1de0"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c687c0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687c01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687c0330"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c687c04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687c0640"/>
        <function-ref name="get" scoped="" ref="0x2b6c687c07c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c687c0950"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c687c0ad8"/>
        <function-ref name="set" scoped="" ref="0x2b6c687c0c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c687c0de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c687bf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c687bf2a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687bf430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6c687c27d0" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="TargetPlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6c687c27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687c2b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687c2ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687c2e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687c1020"/>
        <function-ref name="get" scoped="" ref="0x2b6c687c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687c1330"/>
        <function-ref name="set" scoped="" ref="0x2b6c687c14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687c1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2b6c687f2120" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="TargetPlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2b6c687f2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687f2470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687f25f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2b6c687f2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687f2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687f2a90"/>
        <function-ref name="getResistor" scoped="" ref="0x2b6c687f2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687f2da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c687f1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2b6c687f11a8"/>
        <function-ref name="getRaw" scoped="" ref="0x2b6c687f1330"/>
        <function-ref name="set" scoped="" ref="0x2b6c687f14b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2b6c687f1640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2b6c687f17c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2b6c687f1a50"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687f1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b6c687bd020" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="TargetPlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2b6c687bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c687bd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c687bd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c687bd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c687bd808"/>
        <function-ref name="get" scoped="" ref="0x2b6c687bd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c687bdb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c687bdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c687bde28"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/msz/github/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c681c2020" loc="62:/home/msz/github/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/msz/github/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c67d5b780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/msz/github/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/msz/github/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b6c681c6b18" loc="60:/home/msz/github/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/msz/github/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2b6c681f1c28" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2b6c681f2070" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2b6c681f1560" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2b6c681f49a8" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2b6c681f2780" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2b6c681f7c78" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2b6c681f4328" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2b6c681f2e48" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/msz/github/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/msz/github/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b6c68120378" loc="62:/home/msz/github/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/msz/github/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b6c67dff450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2b6c68237748" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b6c682374d8" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2b6c68244de0" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c68206628"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b6c682044e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b6c68236020" loc="57:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2b6c68236e20" loc="59:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2b6c68239da0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b6c682366f8" loc="58:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b6c6823a570" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2b6c6823ac98" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b6c68239690" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c68206628"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b6c682044e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c68239420" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c68206628"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2b6c682044e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b6c6824a178" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2b6c68247520" loc="79:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2b6c682472b0" loc="79:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b6c682460a8" loc="86:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6c68247dc0" loc="86:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6c68248b30" loc="68:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6c682483a0" loc="63:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2b6c6824aaa0" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2b6c6824a830" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2b6c68253810" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2b6c6824f290" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b6c6824f020" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2b6c6824fbf0" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b6c6824f980" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2b6c6824e590" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2b6c6824e320" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c6824ec18" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b6c682406f8" loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2b6c6823fe58" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2b6c6823fbe8" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2b6c68240dc8" loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c68227b90" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2b6c6823f4d8" loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6c68242a00" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b6c68240070" loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6c68242328" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6c682410d8" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2b6c68241978" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b6c68241708" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2b6c6823d830" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2b6c6823d5c0" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b6c67402b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b6c68284db0" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/msz/github/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/msz/github/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b6c68185a28" loc="76:/home/msz/github/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/msz/github/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/msz/github/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/msz/github/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b6c67dd7d10" loc="52:/home/msz/github/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/msz/github/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c67d51020" loc="57:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b6c67d50020" loc="72:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b6c67d51738" loc="65:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b6c67d58ba0" loc="67:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c67d5b780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b6c67d573e0" loc="75:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c68397338" loc="53:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c68397338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6c6838f020" loc="136:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c68394710" loc="83:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b6c683925b8" loc="114:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c68392020" loc="114:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6c68392338" loc="114:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b6c683937b8" loc="98:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b6c6838e020" loc="151:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b6c6838f740" loc="144:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6c68393020" loc="92:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b6c68397e08" loc="64:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c68397b98" loc="64:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b6c683905b8" loc="129:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c68390020" loc="129:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6c68390338" loc="129:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b6c683958a0" loc="73:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c68395630" loc="73:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c68394070" loc="78:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b6c683a9070" loc="61:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b6c683a97a8" loc="67:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b6c683a7020" loc="72:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b6c683a7e70" loc="83:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b6c683a5480" loc="100:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c683a5c18" loc="117:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b6c683a7738" loc="77:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c683a4768" loc="134:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b6c683a44f8" loc="134:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b6c683aa900" loc="56:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b6c683a6608" loc="89:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b6c683a6d20" loc="94:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c683cfbf0" loc="53:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c683cfbf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6c683ca4c8" loc="61:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c67403020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c683c53e8" loc="56:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c683c53e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c683c5618" loc="56:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6c683c0020" loc="109:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c683c2070" loc="78:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b6c683c15c0" loc="103:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c683c1020" loc="103:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b6c683c1340" loc="103:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6c683c27e0" loc="88:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b6c683c07a0" loc="116:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c683c3108" loc="66:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c683c5e68" loc="66:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c683c5618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c683c38d8" loc="73:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c684423f8" loc="57:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c684423f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c68442628" loc="57:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c68442628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6c68441020" loc="64:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c68442628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6c68440070" loc="76:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6c68441838" loc="71:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6c68440760" loc="82:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b6c68565828" loc="44:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b6c68564020" loc="45:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b6c68567a70" loc="42:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b6c68564db0" loc="47:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c68565178" loc="43:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b6c685646d8" loc="46:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c6853ed38" loc="40:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b6c685673e0" loc="41:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b6c685949c0" loc="78:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b6c685930d8" loc="80:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2b6c6858f910" loc="110:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c67d5b780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b6c6858f6a0" loc="110:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b6c685953a0" loc="58:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b6c68592020" loc="87:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2b6c6858e1d8" loc="117:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b6c685937b0" loc="85:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c68594290" loc="73:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2b6c68590710" loc="99:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2b6c68595ac8" loc="66:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c67402790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c6856b5d0" loc="48:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2b6c68592738" loc="92:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2b6c68590e38" loc="101:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2b6c68590020" loc="94:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c67d481d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b6c6856bc90" loc="53:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
