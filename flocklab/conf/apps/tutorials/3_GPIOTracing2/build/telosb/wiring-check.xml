<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="45:FlockLabBlinkC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aae3c8d9628"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aae3c8d7020"/></to>
    </wire>
    <wire loc="72:/home/msz/github/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aae3c8d7020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aae3c8d5c38"/></to>
    </wire>
    <wire loc="46:FlockLabBlinkC.nc">
      <from><interface-ref name="LedTimer" scoped="" ref="0x2aae3caa0590"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3cab0a60"/></to>
    </wire>
    <wire loc="52:/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3cab0a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aae3cacee30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:FlockLabBlinkC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aae3cab6c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aae3cc5a950"/></to>
    </wire>
    <wire loc="51:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aae3cc5a950"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aae3cc56d38"/></to>
    </wire>
    <wire loc="124:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aae3c8d44c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3cc85a80"/></to>
    </wire>
    <wire loc="53:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aae3c8d44c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3cac6768"/></to>
    </wire>
    <wire loc="67:/home/msz/github/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aae3ca7a308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aae3c462390"/></to>
    </wire>
    <wire loc="53:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aae3c462390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aae3c89a940"/></to>
    </wire>
    <wire loc="68:/home/msz/github/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aae3ca7ace0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3c8d63f8"/></to>
    </wire>
    <wire loc="48:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aae3c8d63f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3c8d0510"/></to>
    </wire>
    <wire loc="71:/home/msz/github/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aae3ca94418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2aae3c8d44c8"/></to>
    </wire>
    <wire loc="49:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2aae3c8d0be0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x2aae3c8d1e38"/></to>
    </wire>
    <wire loc="46:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x2aae3c8d1e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3c8eec88"/></to>
    </wire>
    <wire loc="50:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2aae3c8cf370"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3c8e7348"/></to>
    </wire>
    <wire loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aae3c8eec88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3c910530"/></to>
    </wire>
    <wire loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x2aae3c908020"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x2aae3c910ba0"/></to>
    </wire>
    <wire loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2aae3c832808"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2aae3c90fe08"/></to>
    </wire>
    <wire loc="113:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x2aae3c94da20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3ca14c80"/></to>
    </wire>
    <wire loc="126:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x2aae3c976ba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3ca0dc80"/></to>
    </wire>
    <wire loc="108:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x2aae3c95e3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca1ac58"/></to>
    </wire>
    <wire loc="149:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x2aae3c982020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca38c58"/></to>
    </wire>
    <wire loc="107:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x2aae3c964d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca1a020"/></to>
    </wire>
    <wire loc="148:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x2aae3c9696e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca38020"/></to>
    </wire>
    <wire loc="170:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x2aae3c97f020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca44c58"/></to>
    </wire>
    <wire loc="154:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x2aae3c96f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3ca33c80"/></to>
    </wire>
    <wire loc="99:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x2aae3c9471b0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3c9bdc80"/></to>
    </wire>
    <wire loc="135:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x2aae3c984020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca25c58"/></to>
    </wire>
    <wire loc="134:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x2aae3c96ba70"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca25020"/></to>
    </wire>
    <wire loc="133:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x2aae3c974060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3ca27c80"/></to>
    </wire>
    <wire loc="115:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x2aae3c95d3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca12c58"/></to>
    </wire>
    <wire loc="156:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x2aae3c981020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca31c58"/></to>
    </wire>
    <wire loc="140:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x2aae3c973588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3ca20c80"/></to>
    </wire>
    <wire loc="114:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x2aae3c963aa8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca12020"/></to>
    </wire>
    <wire loc="93:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x2aae3c94fb88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9ab798"/></to>
    </wire>
    <wire loc="155:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x2aae3c968558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca31020"/></to>
    </wire>
    <wire loc="106:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x2aae3c94e588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3c9fac80"/></to>
    </wire>
    <wire loc="161:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x2aae3c96e400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3ca4dc80"/></to>
    </wire>
    <wire loc="101:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x2aae3c958480"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3c9ffc58"/></to>
    </wire>
    <wire loc="142:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x2aae3c983020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca1ec58"/></to>
    </wire>
    <wire loc="100:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x2aae3c964020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3c9ff020"/></to>
    </wire>
    <wire loc="141:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x2aae3c96a868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca1e020"/></to>
    </wire>
    <wire loc="163:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x2aae3c980020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca4bc58"/></to>
    </wire>
    <wire loc="147:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x2aae3c972a20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3ca3ac80"/></to>
    </wire>
    <wire loc="120:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></to>
    </wire>
    <wire loc="162:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x2aae3c9673d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca4b020"/></to>
    </wire>
    <wire loc="128:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x2aae3c985060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aae3ca0bc58"/></to>
    </wire>
    <wire loc="169:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x2aae3c986120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca44020"/></to>
    </wire>
    <wire loc="127:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x2aae3c96cd00"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aae3ca0b020"/></to>
    </wire>
    <wire loc="168:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x2aae3c96d898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x2aae3ca46c80"/></to>
    </wire>
    <wire loc="94:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2aae3c9a9658"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9a9020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2aae3c9a9c70"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x2aae3ca60520"/></to>
    </wire>
    <wire loc="96:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2aae3c9a82e8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x2aae3ca60c68"/></to>
    </wire>
    <wire loc="102:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3c9fea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9ab798"/></to>
    </wire>
    <wire loc="103:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3c9fc100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9a9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca19a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9ab798"/></to>
    </wire>
    <wire loc="110:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca16100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9a9020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca11a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9ab798"/></to>
    </wire>
    <wire loc="117:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca0f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9a9020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x2aae3c9c1020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x2aae3c9c1638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x2aae3ca5e418"/></to>
    </wire>
    <wire loc="123:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x2aae3c9c1c50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x2aae3ca5eb60"/></to>
    </wire>
    <wire loc="129:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca2ca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></to>
    </wire>
    <wire loc="130:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca2a100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca24a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></to>
    </wire>
    <wire loc="137:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca22100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca1da90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></to>
    </wire>
    <wire loc="144:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca3d100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca37a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></to>
    </wire>
    <wire loc="151:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca35100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca30a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></to>
    </wire>
    <wire loc="158:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca2e100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca4aa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></to>
    </wire>
    <wire loc="165:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca48100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aae3ca43a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></to>
    </wire>
    <wire loc="172:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x2aae3ca41100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2aae3c469ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aae3c8997f8"/></to>
    </wire>
    <wire loc="55:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2aae3c897d30"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2aae3c464ba0"/></to>
    </wire>
    <wire loc="54:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2aae3cacee30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aae3cac34a0"/></to>
    </wire>
    <wire loc="58:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2aae3cac34a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3cc2a0c8"/></to>
    </wire>
    <wire loc="57:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aae3cac6768"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3cadda80"/></to>
    </wire>
    <wire loc="59:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aae3cade980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aae3cc45c38"/></to>
    </wire>
    <wire loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aae3cadda80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3d0358b8"/></to>
    </wire>
    <wire loc="61:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2aae3cc4e5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aae3cbf8290"/></to>
    </wire>
    <wire loc="62:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aae3cbf3648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aae3cbcf2d0"/></to>
    </wire>
    <wire loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aae3cbcf2d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aae3d02e020"/></to>
    </wire>
    <wire loc="63:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aae3cc3ce48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aae3cb54d70"/></to>
    </wire>
    <wire loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aae3cb54d70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aae3cb60c50"/></to>
    </wire>
    <wire loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aae3d0358b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3d05bbd8"/></to>
    </wire>
    <wire loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2aae3d028450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aae3d034128"/></to>
    </wire>
    <wire loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aae3d034128"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aae3d0594f8"/></to>
    </wire>
    <wire loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aae3d02b1a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aae3cb54d70"/></to>
    </wire>
    <wire loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3d056568"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3d061b88"/></to>
    </wire>
    <wire loc="49:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3d061b88"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cae6858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3d055bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3d05e2a8"/></to>
    </wire>
    <wire loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3d05e2a8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3cb0a4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3d053020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3d05d5b8"/></to>
    </wire>
    <wire loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3d05d5b8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3cb09cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cae6858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></to>
    </wire>
    <wire loc="59:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3cb0a4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x2aae3c976ba8"/></to>
    </wire>
    <wire loc="60:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3cb09cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x2aae3c96cd00"/></to>
    </wire>
    <wire loc="66:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cae6858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></to>
    </wire>
    <wire loc="67:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3cb0a4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x2aae3c973588"/></to>
    </wire>
    <wire loc="68:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3cb09cb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x2aae3c96a868"/></to>
    </wire>
    <wire loc="70:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cae6858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></to>
    </wire>
    <wire loc="71:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3cb0a4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x2aae3c972a20"/></to>
    </wire>
    <wire loc="72:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3cb09cb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x2aae3c9696e0"/></to>
    </wire>
    <wire loc="74:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cae6858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></to>
    </wire>
    <wire loc="75:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3cb0a4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x2aae3c96f020"/></to>
    </wire>
    <wire loc="76:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3cb09cb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x2aae3c968558"/></to>
    </wire>
    <wire loc="78:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cae6858"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></to>
    </wire>
    <wire loc="79:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3cb0a4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x2aae3c96e400"/></to>
    </wire>
    <wire loc="80:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3cb09cb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x2aae3c9673d0"/></to>
    </wire>
    <wire loc="82:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cae6858"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></to>
    </wire>
    <wire loc="83:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3cb0a4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x2aae3c96d898"/></to>
    </wire>
    <wire loc="84:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3cb09cb8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x2aae3c986120"/></to>
    </wire>
    <wire loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2aae3cb95e20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2aae3cb52b98"/></to>
    </wire>
    <wire loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2aae3cb52b98"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aae3cb4a020"/></to>
    </wire>
    <wire loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cb65020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></to>
    </wire>
    <wire loc="74:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2aae3cbef5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aae3c469ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2aae3cc48618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aae3c469ca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aae3cc85a80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aae3cc56770"/></to>
    </wire>
    <wire loc="54:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2aae3cc51110"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2aae3cc54548"/></to>
    </wire>
    <wire loc="91:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2aae3cc54548"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2aae3ce8ec30"/></to>
    </wire>
    <wire loc="55:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2aae3cc50338"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2aae3cc87810"/></to>
    </wire>
    <wire loc="94:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2aae3cc87810"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2aae3cead448"/></to>
    </wire>
    <wire loc="56:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2aae3cc774c0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2aae3cc86998"/></to>
    </wire>
    <wire loc="97:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2aae3cc86998"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2aae3cea9cf0"/></to>
    </wire>
    <wire loc="92:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2aae3ce8dda0"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x2aae3ccf7568"/></to>
    </wire>
    <wire loc="500:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x2aae3ccf7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce2d3d8"/></to>
    </wire>
    <wire loc="95:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2aae3ceac5f8"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x2aae3ccf9568"/></to>
    </wire>
    <wire loc="499:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x2aae3ccf9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce33ca0"/></to>
    </wire>
    <wire loc="98:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x2aae3cea8e20"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x2aae3cd01568"/></to>
    </wire>
    <wire loc="495:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x2aae3cd01568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce13ca0"/></to>
    </wire>
    <wire loc="442:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x2aae3cc9c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd6eca0"/></to>
    </wire>
    <wire loc="455:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x2aae3ccb3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cda0ca0"/></to>
    </wire>
    <wire loc="531:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x2aae3ccf17d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd913d8"/></to>
    </wire>
    <wire loc="551:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x2aae3cd28558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce33ca0"/></to>
    </wire>
    <wire loc="532:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x2aae3ccef660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdbdca0"/></to>
    </wire>
    <wire loc="460:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x2aae3ccaf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd96ca0"/></to>
    </wire>
    <wire loc="473:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x2aae3ccc7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdc8ca0"/></to>
    </wire>
    <wire loc="486:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x2aae3ccdf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdfdca0"/></to>
    </wire>
    <wire loc="497:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x2aae3ccfd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce0aca0"/></to>
    </wire>
    <wire loc="535:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x2aae3cd17560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdb4ca0"/></to>
    </wire>
    <wire loc="545:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x2aae3cd06558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce1cca0"/></to>
    </wire>
    <wire loc="557:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x2aae3cd20560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce2d3d8"/></to>
    </wire>
    <wire loc="445:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x2aae3cc96568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd603d8"/></to>
    </wire>
    <wire loc="536:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x2aae3cd14560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdaf3d8"/></to>
    </wire>
    <wire loc="450:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x2aae3ccbd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd863d8"/></to>
    </wire>
    <wire loc="463:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x2aae3cca9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdb83d8"/></to>
    </wire>
    <wire loc="476:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x2aae3ccc1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdeb3d8"/></to>
    </wire>
    <wire loc="489:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x2aae3ccd9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce203d8"/></to>
    </wire>
    <wire loc="440:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x2aae3cca0568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd47ca0"/></to>
    </wire>
    <wire loc="453:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x2aae3ccb7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd79d08"/></to>
    </wire>
    <wire loc="466:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x2aae3cccf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdabca0"/></to>
    </wire>
    <wire loc="530:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x2aae3ccf3970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd913d8"/></to>
    </wire>
    <wire loc="548:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x2aae3cd2e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce0e3d8"/></to>
    </wire>
    <wire loc="555:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x2aae3cd22558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce2d3d8"/></to>
    </wire>
    <wire loc="541:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x2aae3cd0c560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce013d8"/></to>
    </wire>
    <wire loc="471:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x2aae3cccb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdd1dd8"/></to>
    </wire>
    <wire loc="484:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x2aae3cce3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce06ca0"/></to>
    </wire>
    <wire loc="549:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x2aae3cd2c558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce0aca0"/></to>
    </wire>
    <wire loc="538:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x2aae3cd12558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdddca0"/></to>
    </wire>
    <wire loc="443:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x2aae3cc9a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd693d8"/></to>
    </wire>
    <wire loc="456:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x2aae3ccb1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd9b3d8"/></to>
    </wire>
    <wire loc="493:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x2aae3ccd7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce1cca0"/></to>
    </wire>
    <wire loc="461:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x2aae3ccad568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd913d8"/></to>
    </wire>
    <wire loc="474:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x2aae3ccc5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdc33d8"/></to>
    </wire>
    <wire loc="487:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x2aae3ccdd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdf83d8"/></to>
    </wire>
    <wire loc="498:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x2aae3ccfb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce373d8"/></to>
    </wire>
    <wire loc="540:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x2aae3cd0e560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce06ca0"/></to>
    </wire>
    <wire loc="438:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x2aae3cca25a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd1ae18"/></to>
    </wire>
    <wire loc="451:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x2aae3ccbb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd82ca0"/></to>
    </wire>
    <wire loc="464:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x2aae3ccd3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdb4ca0"/></to>
    </wire>
    <wire loc="477:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x2aae3ccbf568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cde7ca0"/></to>
    </wire>
    <wire loc="542:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x2aae3cd0a560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdabca0"/></to>
    </wire>
    <wire loc="546:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x2aae3cd04558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce173d8"/></to>
    </wire>
    <wire loc="552:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x2aae3cd26558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce2d3d8"/></to>
    </wire>
    <wire loc="482:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x2aae3cce7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdddca0"/></to>
    </wire>
    <wire loc="543:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x2aae3cd08560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdd63d8"/></to>
    </wire>
    <wire loc="441:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x2aae3cc9e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd723d8"/></to>
    </wire>
    <wire loc="454:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x2aae3ccb5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cda43d8"/></to>
    </wire>
    <wire loc="467:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x2aae3cccd568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdd63d8"/></to>
    </wire>
    <wire loc="539:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x2aae3cd10560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdd83d8"/></to>
    </wire>
    <wire loc="550:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x2aae3cd2a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce373d8"/></to>
    </wire>
    <wire loc="472:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x2aae3ccc9668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdcc478"/></to>
    </wire>
    <wire loc="485:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x2aae3cce1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce013d8"/></to>
    </wire>
    <wire loc="496:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x2aae3ccff568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce0e3d8"/></to>
    </wire>
    <wire loc="444:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x2aae3cc98568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd65ca0"/></to>
    </wire>
    <wire loc="494:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x2aae3ccd5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce173d8"/></to>
    </wire>
    <wire loc="449:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x2aae3cc94568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd8bca0"/></to>
    </wire>
    <wire loc="462:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x2aae3ccab568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdbdca0"/></to>
    </wire>
    <wire loc="475:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x2aae3ccc3568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdbfca0"/></to>
    </wire>
    <wire loc="488:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x2aae3ccdb568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdf4ca0"/></to>
    </wire>
    <wire loc="439:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x2aae3cc80568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd4b478"/></to>
    </wire>
    <wire loc="452:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x2aae3ccb9568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd7d3d8"/></to>
    </wire>
    <wire loc="465:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x2aae3ccd1568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdaf3d8"/></to>
    </wire>
    <wire loc="478:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x2aae3ccea568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cde13d8"/></to>
    </wire>
    <wire loc="534:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x2aae3cceb548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdb83d8"/></to>
    </wire>
    <wire loc="547:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x2aae3cd02558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce13ca0"/></to>
    </wire>
    <wire loc="533:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x2aae3cced560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdb83d8"/></to>
    </wire>
    <wire loc="483:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x2aae3cce5568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cdd83d8"/></to>
    </wire>
    <wire loc="554:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x2aae3cd24558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce33ca0"/></to>
    </wire>
    <wire loc="558:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x2aae3cd1e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3ce203d8"/></to>
    </wire>
    <wire loc="529:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x2aae3ccf55b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2aae3cd96ca0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/msz/github/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/home/msz/github/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/msz/github/tinyos/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/msz/github/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/msz/github/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/msz/github/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="FlockLabBlinkP" loc="36:FlockLabBlinkP.nc">
      <module/>
    </component>
    <component qname="FlockLabBlinkC.LedTimer" loc="44(FlockLabBlinkC.LedTimer):/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="64:../../../tos/sensorboards/flocklab/LedsP.nc">
      <documentation loc="57:../../../tos/sensorboards/flocklab/LedsP.nc">
        <short>&#10; The implementation of the standard LED mote abstraction.</short>
        <long>&#10; The implementation of the standard LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="59:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <documentation loc="55:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x2aae3c97b878" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x2aae3c97bbf0" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x2aae3c97a020" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x2aae3c97a378" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x2aae3c97a6d0" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x2aae3c97aa20" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x2aae3c97ad88" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x2aae3c978150" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x2aae3c978500" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x2aae3c9bf938" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x2aae3c9bfce8" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/msz/github/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2aae3cb16a20" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2aae3cb16a20"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2aae3cb4ca68" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2aae3cb4ca68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2aae3cb5f550" loc="55:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2aae3cb5f550"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2aae3cb5fcb8" loc="56:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2aae3cb5fcb8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2aae3cb5e0a8" loc="57:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2aae3cb5e0a8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2aae3cb5e820" loc="58:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2aae3cb5e820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2aae3cb5ebc8" loc="59:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2aae3cb5d380" loc="60:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2aae3cb5d380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2aae3cb8d4d8" loc="52:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2aae3cb8d4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2aae3cb8dc40" loc="53:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2aae3cb8dc40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2aae3cb8c068" loc="54:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2aae3cb8c068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2aae3cb8c7e0" loc="55:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2aae3cb8c7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2aae3cb8cb88" loc="56:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aae3cbc8400" loc="46:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aae3cbc8400"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aae3cbedb58" loc="46:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aae3cbedb58"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2aae3cbede68" loc="46:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aae3cc46728" loc="46:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aae3cc46728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/msz/github/tinyos/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x2aae3cd46998" loc="40:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x2aae3cd46d20" loc="41:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x2aae3cd45108" loc="42:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x2aae3cd45490" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x2aae3cd457e0" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2aae3c8d44c8" loc="58:/home/msz/github/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2aae3c8d44c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c8d4818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2aae3c8d7020" loc="57:/home/msz/github/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2aae3c8d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aae3c8d7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3c8d63f8" loc="42:/home/msz/github/tinyos/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3c8d63f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c8d6748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2aae3c8cf370" loc="6:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x2aae3c8cf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c8cf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3c8d0510" loc="4:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3c8d0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c8d0860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x2aae3c8d0be0" loc="5:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2aae3c8d0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c8cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2aae3c8cfa10" loc="7:/home/msz/github/tinyos/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x2aae3c8cfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c8cfd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3c8e7348" loc="2:/home/msz/github/tinyos/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3c8e7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c8e7698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x2aae3c8d1e38" loc="39:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x2aae3c8d1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c8ee1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2aae3c908020" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2aae3c908020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2aae3c908e28"/>
        <function-ref name="initTimerB" scoped="" ref="0x2aae3c9084f8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2aae3c908680"/>
        <function-ref name="initTimerA" scoped="" ref="0x2aae3c908808"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2aae3c908370"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2aae3c908990"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2aae3c908b18"/>
        <function-ref name="initClocks" scoped="" ref="0x2aae3c908ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3c8eec88" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3c8eec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c909020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x2aae3c910ba0" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2aae3c910ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2aae3c90fad8"/>
        <function-ref name="initTimerB" scoped="" ref="0x2aae3c90f1a8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2aae3c90f330"/>
        <function-ref name="initTimerA" scoped="" ref="0x2aae3c90f4b8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2aae3c90f020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2aae3c90f640"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2aae3c90f7c8"/>
        <function-ref name="initClocks" scoped="" ref="0x2aae3c90f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2aae3c90fe08" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aae3c90fe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aae3c90e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3c910530" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3c910530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c910880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x2aae3c94da20" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x2aae3c94da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c94dd70"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c966020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c9661a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c966330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c9664b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c966640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c9667c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c966950"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c966ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x2aae3c976ba8" loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x2aae3c976ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c975020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c9751a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c975330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c9754b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c975640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c9757c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c975950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c975ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c975c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x2aae3c95e3d0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x2aae3c95e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c95e720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c95e8a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c95ea30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c95ebb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c95ed40"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c95d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x2aae3c982020" loc="68:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x2aae3c982020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c982370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c9824f8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c982680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c982808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c982990"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c982b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x2aae3c964d40" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x2aae3c964d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c9630d8"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c963260"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c9633e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c963570"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c9636f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x2aae3c9696e0" loc="61:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x2aae3c9696e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c969a30"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c969bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c969d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c968020"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c9681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x2aae3c97f020" loc="71:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x2aae3c97f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c97f370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c97f4f8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c97f680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c97f808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c97f990"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c97fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x2aae3c96f020" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x2aae3c96f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c96f370"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c96f4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c96f680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c96f808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c96f990"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c96fb18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c96fca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c96fe28"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c96e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x2aae3c9471b0" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x2aae3c9471b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c947500"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c947688"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c947810"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c947998"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c947b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c947ca8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c947e30"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c94e020"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c94e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x2aae3c984020" loc="66:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x2aae3c984020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c984370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c9844f8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c984680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c984808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c984990"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c984b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x2aae3c96ba70" loc="59:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x2aae3c96ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c96bdc0"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c96a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c96a1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c96a330"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c96a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x2aae3c974060" loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x2aae3c974060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c9744b0"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c974638"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c9747c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c974948"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c974ad0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c974c58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c974de0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c973020"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c9731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x2aae3c95d3d0" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x2aae3c95d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c95d720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c95d8a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c95da30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c95dbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c95dd40"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c957020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x2aae3c981020" loc="69:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x2aae3c981020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c981370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c9814f8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c981680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c981808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c981990"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c981b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x2aae3c973588" loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x2aae3c973588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c9738d8"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c973a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c973be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c973d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c972020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c9721a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c972330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c9724b8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c972640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x2aae3c963aa8" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x2aae3c963aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c963df8"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c95f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c95f1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c95f330"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c95f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x2aae3c94fb88" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x2aae3c94fb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3c938020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3c9381a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c938330"/>
        <function-ref name="get" scoped="" ref="0x2aae3c9384b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c938640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c9387c8"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3c938950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c938ad8"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3c938c60"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3c938de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3c956020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x2aae3c968558" loc="62:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x2aae3c968558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c9688a8"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c968a30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c968bb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c968d40"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c967020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x2aae3c94e588" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x2aae3c94e588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c94e8d8"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c94ea60"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c94ebe8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c94ed70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c94d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c94d1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c94d330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c94d4b8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c94d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x2aae3c96e400" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x2aae3c96e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c96e750"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c96e8d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c96ea60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c96ebe8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c96ed70"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c96d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c96d1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c96d330"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c96d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x2aae3c958480" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x2aae3c958480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c9587d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c958958"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c958ae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c958c68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c958df0"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c95e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x2aae3c983020" loc="67:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x2aae3c983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c983370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c9834f8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c983680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c983808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c983990"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c983b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x2aae3c964020" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x2aae3c964020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c964370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c9644f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c964680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c964808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c964990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x2aae3c96a868" loc="60:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x2aae3c96a868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c96abb8"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c96ad40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c969020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c9691a8"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c969330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x2aae3c980020" loc="70:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x2aae3c980020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c980370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c9804f8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c980680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c980808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c980990"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c980b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x2aae3c972a20" loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x2aae3c972a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c972d70"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c970020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c9701a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c970330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c9704b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c970640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c9707c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c970950"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c970ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x2aae3c957398" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x2aae3c957398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3c9576e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3c957870"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c9579f8"/>
        <function-ref name="get" scoped="" ref="0x2aae3c957b80"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c957d08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c976020"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3c9761a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c976330"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3c9764b8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3c976640"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3c9767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x2aae3c9673d0" loc="63:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x2aae3c9673d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c967720"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c9678a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c967a30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c967bb8"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c967d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x2aae3c985060" loc="65:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x2aae3c985060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c9853b0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c985538"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c9856c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c985848"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c9859d0"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c985b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x2aae3c986120" loc="64:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x2aae3c986120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c986670"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c9867f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c986980"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c986b08"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c986c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x2aae3c96cd00" loc="58:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x2aae3c96cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c96b0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c96b228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c96b3b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c96b538"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c96b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x2aae3c96d898" loc="57:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x2aae3c96d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3c96dbe8"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3c96dd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c96c020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3c96c1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3c96c330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c96c4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3c96c640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3c96c7c8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3c96c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2aae3c9a9c70" loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2aae3c9a9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9a8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2aae3c9a9658" loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2aae3c9a9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9a99a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2aae3c9a82e8" loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2aae3c9a82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9a8638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2aae3c9a9020" loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3c9a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9a9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aae3c9ab798" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3c9ab798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3c9abae8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3c9abc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c9abdf8"/>
        <function-ref name="get" scoped="" ref="0x2aae3c9aa020"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c9aa1a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c9aa330"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3c9aa4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c9aa640"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3c9aa7c8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3c9aa950"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3c9aaad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x2aae3c9c1638" loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x2aae3c9c1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9c1988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x2aae3c9c1020" loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x2aae3c9c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9c1370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x2aae3c9c1c50" loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x2aae3c9c1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x2aae3c9c28a0" loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3c9c28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9c2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aae3c9c31e8" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3c9c31e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3c9c3538"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3c9c36c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c9c3848"/>
        <function-ref name="get" scoped="" ref="0x2aae3c9c39d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c9c3b58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c9c3ce0"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3c9c3e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c9c2020"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3c9c21a8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3c9c2330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3c9c24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3c9ffc58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3c9ffc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c9fe020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3c9fe1a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3c9fe330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c9fe4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c9fe640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3c9fe7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3c9bdc80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3c9bdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca00020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca001a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca00330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca004b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca00640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca007c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca00950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca00ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca00c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3c9fc100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3c9fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3c9fc450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3c9ff020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3c9ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3c9ff370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3c9ff4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3c9ff680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3c9ff808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3c9ff990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3c9fea90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3c9fea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3c9fede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3c9fd020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3c9fd1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3c9fd330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3c9fd4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3c9fd640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3c9fd7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3c9fd950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3c9fdad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3c9fdc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3c9fdde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca1ac58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca1ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca19020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca191a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca19330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca194b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca19640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3c9fac80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3c9fac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca1b020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca1b1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca1b330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca1b4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca1b640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca1b7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca1b950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca1bad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca1bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca16100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca16100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca16450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca1a020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca1a370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca1a4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca1a680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca1a808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca1a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca19a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca19a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca19de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca17020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca171a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca17330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca174b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca17640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca177c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca17950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca17ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca17c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca17de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca12c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca12c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca11020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca111a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca11330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca114b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca11640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca117c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3ca14c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3ca14c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca13020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca131a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca13330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca134b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca13640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca137c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca13950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca13ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca13c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca0f100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca0f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca0f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca12020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca12370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca124f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca12680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca12808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca12990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca11a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca11a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca11de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca10020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca101a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca10330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca104b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca10640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca107c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca10950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca10ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca10c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca10de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca0bc58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca0bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca2c020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca2c1a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca2c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca2c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca2c640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca2c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3ca0dc80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3ca0dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca0c020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca0c1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca0c330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca0c4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca0c640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca0c7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca0c950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca0cad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca0cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca2a100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca2a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca2a450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca0b020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca0b370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca0b4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca0b680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca0b808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca0b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca2ca90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca2ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca2cde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca2b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca2b1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca2b330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca2b4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca2b640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca2b7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca2b950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca2bad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca2bc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca2bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca25c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca25c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca24020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca241a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca24330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca244b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca24640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca247c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3ca27c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3ca27c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca26020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca261a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca26330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca264b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca26640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca267c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca26950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca26ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca26c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca22100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca22100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca22450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca25020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca25370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca254f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca25680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca25808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca25990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca24a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca24a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca24de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca23020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca231a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca23330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca234b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca23640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca237c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca23950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca23ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca23c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca23de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca1ec58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca1ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca1d020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca1d1a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca1d330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca1d4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca1d640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca1d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3ca20c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3ca20c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca1f020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca1f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca1f330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca1f4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca1f640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca1f7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca1f950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca1fad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca1fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca3d100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca3d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca3d450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca1e020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca1e370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca1e4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca1e680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca1e808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca1e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca1da90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca1da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca1dde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca1c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca1c1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca1c330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca1c4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca1c640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca1c7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca1c950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca1cad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca1cc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca1cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca38c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca38c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca37020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca371a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca37330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca374b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca37640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca377c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3ca3ac80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3ca3ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca39020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca391a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca39330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca394b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca39640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca397c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca39950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca39ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca39c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca35100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca35100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca35450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca38020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca38370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca384f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca38680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca38808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca38990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca37a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca37a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca37de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca36020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca361a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca36330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca364b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca36640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca367c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca36950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca36ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca36c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca36de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca31c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca31c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca30020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca301a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca30330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca304b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca30640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3ca33c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3ca33c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca32020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca321a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca32330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca324b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca32640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca327c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca32950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca32ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca32c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca2e100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca2e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca2e450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca31020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca31370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca314f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca31680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca31808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca31990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca30a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca30a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca30de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca2f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca2f1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca2f330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca2f4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca2f640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca2f7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca2f950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca2fad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca2fc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca2fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca4bc58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca4bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca4a020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca4a1a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca4a330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca4a4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca4a640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca4a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3ca4dc80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3ca4dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca4c020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca4c1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca4c330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca4c4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca4c640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca4c7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca4c950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca4cad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca4cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca48100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca48100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca48450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca4b020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca4b370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca4b4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca4b680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca4b808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca4b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca4aa90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca4aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca4ade0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca49020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca491a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca49330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca494b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca49640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca497c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca49950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca49ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca49c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca49de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aae3ca44c58" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x2aae3ca44c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca43020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x2aae3ca431a8"/>
        <function-ref name="captured" scoped="" ref="0x2aae3ca43330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca434b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca43640"/>
        <function-ref name="setEdge" scoped="" ref="0x2aae3ca437c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x2aae3ca46c80" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x2aae3ca46c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3ca45020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3ca451a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca45330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3ca454b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3ca45640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca457c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3ca45950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3ca45ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3ca45c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x2aae3ca41100" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x2aae3ca41100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca41450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aae3ca44020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x2aae3ca44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3ca44370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3ca444f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3ca44680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3ca44808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3ca44990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2aae3ca43a90" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3ca43a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3ca43de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3ca42020"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3ca421a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca42330"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3ca424b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3ca42640"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3ca427c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3ca42950"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3ca42ad8"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3ca42c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3ca42de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x2aae3ca5eb60" loc="7:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x2aae3ca5eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x2aae3ca60520" loc="4:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x2aae3ca60520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca60870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x2aae3ca60c68" loc="5:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x2aae3ca60c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x2aae3ca5e418" loc="6:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x2aae3ca5e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aae3ca5e768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2aae3c832808" loc="55:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aae3c832808"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aae3c832b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2aae3c464ba0" loc="51:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2aae3c464ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aae3c4e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2aae3c75b0f0" loc="52:/home/msz/github/tinyos/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x2aae3c75b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aae3c75b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x2aae3c8edaa8" loc="39:/home/msz/github/tinyos/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x2aae3c8edaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x2aae3ca79950"/>
        <function-ref name="initTimerB" scoped="" ref="0x2aae3ca79020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x2aae3ca791a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x2aae3ca79330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x2aae3c8eddf8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x2aae3ca794b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x2aae3ca79640"/>
        <function-ref name="initClocks" scoped="" ref="0x2aae3ca797c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2aae3ca94418" loc="60:/home/msz/github/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x2aae3ca94418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3ca94768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2aae3c8d5c38" loc="57:/home/msz/github/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2aae3c8d5c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aae3ca7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2aae3ca7ace0" loc="59:/home/msz/github/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x2aae3ca7ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3ca940a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2aae3ca7a308" loc="58:/home/msz/github/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2aae3ca7a308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3ca7a658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aae3ca7a7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aae3ca7a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aae3c469ca0" loc="48:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2aae3c469ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aae3c42a020"/>
        <function-ref name="runTask" scoped="" ref="0x2aae3c42a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aae3c462390" loc="47:/home/msz/github/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2aae3c462390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c4626e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aae3c462868"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aae3c4629f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aae3c8997f8" loc="56:/home/msz/github/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x2aae3c8997f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aae3c899b48"/>
        <function-ref name="runTask" scoped="" ref="0x2aae3c899cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2aae3c897d30" loc="57:/home/msz/github/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x2aae3c897d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aae3c8960d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aae3c89a940" loc="55:/home/msz/github/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x2aae3c89a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3c89ac90"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aae3c89ae18"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aae3c899020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2aae3c8d9628" loc="38:FlockLabBlinkP.nc">
      <component-ref qname="FlockLabBlinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x2aae3c8d9628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aae3c8d9978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedTimer" ref="0x2aae3caa0590" loc="39:FlockLabBlinkP.nc">
      <component-ref qname="FlockLabBlinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedTimer" scoped="" ref="0x2aae3caa0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3ca9e8f0"/>
        <function-ref name="fired" scoped="" ref="0x2aae3caac020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aae3caacd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aae3caac8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2aae3ca9d1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2aae3ca9ed40"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3caac470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aae3caad118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aae3ca9e320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aae3caad5b8"/>
        <function-ref name="stop" scoped="" ref="0x2aae3caada58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aae3cab6c38" loc="40:FlockLabBlinkP.nc">
      <component-ref qname="FlockLabBlinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2aae3cab6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aae3ca9c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aae3ca9c1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2aae3ca9c330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aae3ca9c4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aae3ca9c640"/>
        <function-ref name="get" scoped="" ref="0x2aae3ca9c7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aae3ca9c950"/>
        <function-ref name="led2Off" scoped="" ref="0x2aae3cabf020"/>
        <function-ref name="set" scoped="" ref="0x2aae3ca9cad8"/>
        <function-ref name="led0On" scoped="" ref="0x2aae3ca9cc60"/>
        <function-ref name="led2On" scoped="" ref="0x2aae3ca9cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aae3cab0a60" loc="45:/home/msz/github/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="FlockLabBlinkC.LedTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3cab0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3cc5cd60"/>
        <function-ref name="fired" scoped="" ref="0x2aae3cc5e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aae3cc5c1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aae3cc5ed10"/>
        <function-ref name="getdt" scoped="" ref="0x2aae3cc5b648"/>
        <function-ref name="gett0" scoped="" ref="0x2aae3cc5b1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3cc5e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aae3cc5f620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aae3cc5c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aae3cc5fac0"/>
        <function-ref name="stop" scoped="" ref="0x2aae3cc5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2aae3cacee30" loc="49:/home/msz/github/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2aae3cacee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3cac80c0"/>
        <function-ref name="fired" scoped="" ref="0x2aae3caca798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aae3cac94d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aae3cac9088"/>
        <function-ref name="getdt" scoped="" ref="0x2aae3cac8960"/>
        <function-ref name="gett0" scoped="" ref="0x2aae3cac8510"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3cacabe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aae3cacb9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aae3cac9aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aae3cacbe80"/>
        <function-ref name="stop" scoped="" ref="0x2aae3caca348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2aae3cac34a0" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x2aae3cac34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3cae46c8"/>
        <function-ref name="fired" scoped="" ref="0x2aae3cac2db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aae3cac0ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aae3cac0688"/>
        <function-ref name="getdt" scoped="" ref="0x2aae3cae3020"/>
        <function-ref name="gett0" scoped="" ref="0x2aae3cae4b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3cac0238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aae3cac2020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aae3cae40f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aae3cac24c0"/>
        <function-ref name="stop" scoped="" ref="0x2aae3cac2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aae3cade980" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2aae3cade980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3cae1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3cac6768" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3cac6768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3cac6ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aae3cbcf2d0" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2aae3cbcf2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3cbcd928"/>
        <function-ref name="fired" scoped="" ref="0x2aae3cbce9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2aae3cbcd320"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3cbcee70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aae3cbcddb0"/>
        <function-ref name="start" scoped="" ref="0x2aae3cbce088"/>
        <function-ref name="stop" scoped="" ref="0x2aae3cbce560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3cadda80" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3cadda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3cadddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aae3d034128" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2aae3d034128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3d032758"/>
        <function-ref name="fired" scoped="" ref="0x2aae3d033808"/>
        <function-ref name="startAt" scoped="" ref="0x2aae3d032150"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3d033c90"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aae3d032be0"/>
        <function-ref name="start" scoped="" ref="0x2aae3d034e78"/>
        <function-ref name="stop" scoped="" ref="0x2aae3d033380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3d0358b8" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3d0358b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3d035c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2aae3d05d5b8" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3d05d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3d05d908"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3d05da90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3d05dc18"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3d05dda0"/>
        <function-ref name="fired" scoped="" ref="0x2aae3d05c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2aae3d061b88" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3d061b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3d05f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3d05f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3d05f330"/>
        <function-ref name="get" scoped="" ref="0x2aae3d05f4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3d05f640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3d05f7c8"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3d05f950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3d05fad8"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3d05fc60"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3d05fde8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3d05e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2aae3d05e2a8" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3d05e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3d05e5f8"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3d05e780"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3d05e908"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3d05ea90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3d05ec18"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3d05eda0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3d05d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3d05d1a8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3d05d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x2aae3cb09cb8" loc="52:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3cb09cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3cb070a0"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3cb07228"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3cb073b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3cb07538"/>
        <function-ref name="fired" scoped="" ref="0x2aae3cb076c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x2aae3cae6858" loc="50:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cae6858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3cae6ba8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3cae6d30"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3cae5020"/>
        <function-ref name="get" scoped="" ref="0x2aae3cae51a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3cae5330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3cae54b8"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3cae5640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3cae57c8"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3cae5950"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3cae5ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3cae5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x2aae3cb0a4d0" loc="51:/home/msz/github/tinyos/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3cb0a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3cb0a820"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3cb0a9a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3cb0ab30"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3cb0acb8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3cb0ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3cb09020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3cb091a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3cb09330"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3cb094b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x2aae3d053020" loc="49:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x2aae3d053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x2aae3d053370"/>
        <function-ref name="setEvent" scoped="" ref="0x2aae3d0534f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x2aae3d053680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x2aae3d053808"/>
        <function-ref name="fired" scoped="" ref="0x2aae3d053990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2aae3d056568" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3d056568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3d0568b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3d056a40"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3d056bc8"/>
        <function-ref name="get" scoped="" ref="0x2aae3d056d50"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3d055020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3d0551a8"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3d055330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3d0554b8"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3d055640"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3d0557c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3d055950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aae3d0594f8" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2aae3d0594f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3d057c88"/>
        <function-ref name="fired" scoped="" ref="0x2aae3d058d08"/>
        <function-ref name="startAt" scoped="" ref="0x2aae3d057680"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3d0571f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aae3d056150"/>
        <function-ref name="start" scoped="" ref="0x2aae3d0583a8"/>
        <function-ref name="stop" scoped="" ref="0x2aae3d058880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3d05bbd8" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3d05bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3d059020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x2aae3d055bd8" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x2aae3d055bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x2aae3d054020"/>
        <function-ref name="getControl" scoped="" ref="0x2aae3d0541a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3d054330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x2aae3d0544b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x2aae3d054640"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3d0547c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aae3d054950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x2aae3d054ad8"/>
        <function-ref name="setControl" scoped="" ref="0x2aae3d054c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aae3cb54d70" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2aae3cb54d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3cb58af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3cb534a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3cb53020"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3cb53930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x2aae3cb52b98" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x2aae3cb52b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3cb4f930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3cb4e270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3cb4fdb8"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3cb4e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x2aae3cb65020" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x2aae3cb65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aae3cb65370"/>
        <function-ref name="setClockSource" scoped="" ref="0x2aae3cb654f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x2aae3cb65680"/>
        <function-ref name="get" scoped="" ref="0x2aae3cb65808"/>
        <function-ref name="disableEvents" scoped="" ref="0x2aae3cb65990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3cb65b18"/>
        <function-ref name="getMode" scoped="" ref="0x2aae3cb65ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3cb65e28"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3cb63020"/>
        <function-ref name="setMode" scoped="" ref="0x2aae3cb631a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x2aae3cb63330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aae3cb4a020" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2aae3cb4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3cb4ad70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3cb666b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3cb66230"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3cb66b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2aae3cb95e20" loc="63:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x2aae3cb95e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3cb93be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3cb92548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3cb920c0"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3cb929d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aae3cb60c50" loc="62:/home/msz/github/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2aae3cb60c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3cb6e9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3cb95330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3cb6ee78"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3cb957b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aae3d02e020" loc="61:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2aae3d02e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3d02c690"/>
        <function-ref name="fired" scoped="" ref="0x2aae3d02d6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2aae3d02c088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3d02db80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aae3d02cb18"/>
        <function-ref name="start" scoped="" ref="0x2aae3d02ed70"/>
        <function-ref name="stop" scoped="" ref="0x2aae3d02d270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2aae3d028450" loc="73:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x2aae3d028450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caaa0f8"/>
            <typename><typedef-ref name="T32khz" ref="0x2aae3caaa450"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3d026ab0"/>
        <function-ref name="fired" scoped="" ref="0x2aae3d027b30"/>
        <function-ref name="startAt" scoped="" ref="0x2aae3d0264a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3d026020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aae3d025020"/>
        <function-ref name="start" scoped="" ref="0x2aae3d0271d0"/>
        <function-ref name="stop" scoped="" ref="0x2aae3d0276a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aae3d02b1a8" loc="68:/home/msz/github/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2aae3d02b1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3d02a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3d02a930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3d02a4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3d02adb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2aae3cbef5e8" loc="74:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x2aae3cbef5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aae3cbef938"/>
        <function-ref name="runTask" scoped="" ref="0x2aae3cbefac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aae3cbf3648" loc="49:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x2aae3cbf3648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3cbf0cc0"/>
        <function-ref name="fired" scoped="" ref="0x2aae3cbf1d50"/>
        <function-ref name="startAt" scoped="" ref="0x2aae3cbf06b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3cbf0230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aae3cbef190"/>
        <function-ref name="start" scoped="" ref="0x2aae3cbf13f0"/>
        <function-ref name="stop" scoped="" ref="0x2aae3cbf18c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aae3cbf8290" loc="48:/home/msz/github/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3cbf8290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3cbf45f0"/>
        <function-ref name="fired" scoped="" ref="0x2aae3cbf6ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aae3cbf58c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aae3cbf5470"/>
        <function-ref name="getdt" scoped="" ref="0x2aae3cbf3020"/>
        <function-ref name="gett0" scoped="" ref="0x2aae3cbf4a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3cbf5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aae3cbf8dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aae3cbf4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aae3cbf62b8"/>
        <function-ref name="stop" scoped="" ref="0x2aae3cbf6758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2aae3cc48618" loc="71:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x2aae3cc48618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aae3cc48968"/>
        <function-ref name="runTask" scoped="" ref="0x2aae3cc48af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2aae3cc4e5a0" loc="49:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x2aae3cc4e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3cc4a8f0"/>
        <function-ref name="fired" scoped="" ref="0x2aae3cc4b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aae3cc4bd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aae3cc4b8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2aae3cc481c0"/>
        <function-ref name="gett0" scoped="" ref="0x2aae3cc4ad40"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3cc4b470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aae3cc4c118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aae3cc4a320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aae3cc4c5b8"/>
        <function-ref name="stop" scoped="" ref="0x2aae3cc4ca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aae3cc2a0c8" loc="48:/home/msz/github/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x2aae3cc2a0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aae3cc4f610"/>
        <function-ref name="fired" scoped="" ref="0x2aae3cc28a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aae3cc27900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aae3cc27490"/>
        <function-ref name="getdt" scoped="" ref="0x2aae3cc4e020"/>
        <function-ref name="gett0" scoped="" ref="0x2aae3cc4fa80"/>
        <function-ref name="isRunning" scoped="" ref="0x2aae3cc27020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aae3cc2ac30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aae3cc4f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aae3cc28118"/>
        <function-ref name="stop" scoped="" ref="0x2aae3cc285d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aae3cc45c38" loc="48:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x2aae3cc45c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3cc3c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aae3cc3ce48" loc="49:/home/msz/github/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x2aae3cc3ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x2aae3caab948"/>
            <typename><typedef-ref name="TMilli" ref="0x2aae3caabca0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aae3cc3bbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aae3cc65548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aae3cc650c0"/>
        <function-ref name="overflow" scoped="" ref="0x2aae3cc659d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2aae3cc5a950" loc="46:/home/msz/github/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2aae3cc5a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aae3cc5aca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aae3cc5ae28"/>
        <function-ref name="led1On" scoped="" ref="0x2aae3cc57020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aae3cc571a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aae3cc57330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc574b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aae3cc57640"/>
        <function-ref name="led2Off" scoped="" ref="0x2aae3cc57c60"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc577c8"/>
        <function-ref name="led0On" scoped="" ref="0x2aae3cc57950"/>
        <function-ref name="led2On" scoped="" ref="0x2aae3cc57ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2aae3cc51110" loc="70:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2aae3cc51110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc51460"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc515e8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc51770"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc518f8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc51a80"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc51c08"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc51d90"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aae3cc56770" loc="66:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3cc56770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3cc56ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2aae3cc50338" loc="71:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2aae3cc50338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc50688"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc50810"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc50998"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc50b20"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc50ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc50e30"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc77020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2aae3cc56d38" loc="67:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x2aae3cc56d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aae3cc530d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aae3cc53260"/>
        <function-ref name="led1On" scoped="" ref="0x2aae3cc533e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aae3cc53570"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aae3cc536f8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc53880"/>
        <function-ref name="led1Off" scoped="" ref="0x2aae3cc53a08"/>
        <function-ref name="led2Off" scoped="" ref="0x2aae3cc521a8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc53b90"/>
        <function-ref name="led0On" scoped="" ref="0x2aae3cc53d18"/>
        <function-ref name="led2On" scoped="" ref="0x2aae3cc52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2aae3cc774c0" loc="72:../../../tos/sensorboards/flocklab/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2aae3cc774c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc77810"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc77998"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc77b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc77ca8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc77e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc76020"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc761a8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2aae3cc54548" loc="60:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x2aae3cc54548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc54898"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc54a20"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc54ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc54d30"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc871a8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc87330"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc874b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2aae3cc87810" loc="61:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x2aae3cc87810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc87b60"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc87ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc87e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc86020"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc86330"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc864b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc86640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2aae3cc85a80" loc="63:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x2aae3cc85a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aae3cc85dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2aae3cc86998" loc="62:../../../tos/sensorboards/flocklab/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x2aae3cc86998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc86ce8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc86e70"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc85020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc851a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc85330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc854b8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc85640"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc857c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x2aae3cc9c568" loc="53:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x2aae3cc9c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc9c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc9ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cc9cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc9cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc9b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cc9b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc9b330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc9b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cc9b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cc9b7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc9b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cc9bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cc9bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cc9a020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x2aae3ccb3568" loc="66:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x2aae3ccb3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccb38b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccb3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccb3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccb3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccb2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccb21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccb2330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccb24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccb2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccb27c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccb2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccb2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccb2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccb1020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccb11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x2aae3ccf17d0" loc="145:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x2aae3ccf17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccf1b20"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccf1ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccf1e30"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccf0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccf01a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccf0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccf04b8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccf0640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccf07c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccf0950"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccf0ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccf0c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccf0de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccef120"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccef2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x2aae3cd28558" loc="165:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x2aae3cd28558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd288a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd28a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd28bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd28d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd27020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd271a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd27330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd274b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd27640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd277c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd27950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd27ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd27c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd26020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x2aae3ccef660" loc="146:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x2aae3ccef660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccef9b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccefb38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccefcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccefe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccee020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccee330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccee4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccee640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccee7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccee950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cceead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cceec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cced020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cced1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x2aae3ccaf568" loc="71:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x2aae3ccaf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccaf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccafa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccafbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccafd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccae020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccae330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccae4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccae640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccae7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccae950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccaead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccaec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccad020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x2aae3ccc7568" loc="84:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x2aae3ccc7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccc78b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccc7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccc7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccc7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccc6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccc61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccc6330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccc64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccc6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccc67c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccc6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccc6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccc6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccc5020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccc51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x2aae3ccdf568" loc="97:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x2aae3ccdf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccdf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccdfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccdfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccdfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccde020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccde1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccde330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccde4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccde640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccde7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccde950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccdead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccdec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccdd020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccdd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x2aae3ccfd568" loc="108:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x2aae3ccfd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccfd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccfda40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccfdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccfdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccfc020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccfc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccfc330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccfc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccfc640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccfc7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccfc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccfcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccfcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccfb020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccfb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x2aae3cd17560" loc="149:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x2aae3cd17560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd178b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd17a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd17bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd17d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd15020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd15330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd154b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd15640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd157c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd15950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd15ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd15c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd14020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x2aae3cd06558" loc="159:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x2aae3cd06558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd068a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd06a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd06bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd06d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd05020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd05330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd054b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd05640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd057c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd05950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd05ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd05c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd04020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x2aae3cd20560" loc="171:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x2aae3cd20560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd208b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd20a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd20bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd20d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd1f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd1f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd1f330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd1f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd1f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd1f7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd1f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd1fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd1fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd1e020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd1e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x2aae3cc96568" loc="56:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x2aae3cc96568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc968b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc96a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cc96bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc96d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc95020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cc951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc95330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc954b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cc95640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cc957c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc95950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cc95ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cc95c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cc94020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x2aae3cd14560" loc="150:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x2aae3cd14560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd148b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd14a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd14bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd14d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd13020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd13330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd134b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd13640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd137c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd13950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd13ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd13c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd12020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x2aae3ccbd568" loc="61:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x2aae3ccbd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccbd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccbda40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccbdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccbdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccbc020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccbc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccbc330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccbc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccbc640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccbc7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccbc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccbcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccbcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccbb020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccbb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x2aae3cca9568" loc="74:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x2aae3cca9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cca98b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cca9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cca9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cca9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cca8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cca81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cca8330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cca84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cca8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cca87c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cca8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cca8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cca8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccd3020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccd31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x2aae3ccc1568" loc="87:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x2aae3ccc1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccc18b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccc1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccc1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccc1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccc0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccc01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccc0330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccc04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccc0640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccc07c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccc0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccc0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccc0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccbf020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccbf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x2aae3ccd9568" loc="100:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x2aae3ccd9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccd98b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccd9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccd9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccd9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccd8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccd81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccd8330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccd84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccd8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccd87c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccd8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccd8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccd8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccd7020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x2aae3ccf7568" loc="111:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x2aae3ccf7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccf78b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccf7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccf7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccf7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccf6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccf61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccf6330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccf64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccf6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccf67c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccf6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccf6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccf6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccf5020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccf51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x2aae3cca0568" loc="51:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x2aae3cca0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cca08b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cca0a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cca0bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cca0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc9f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cc9f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc9f330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc9f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cc9f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cc9f7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc9f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cc9fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cc9fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cc9e020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x2aae3ccb7568" loc="64:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x2aae3ccb7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccb79b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccb7b40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccb7cc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccb7e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccb6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccb61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccb6330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccb64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccb6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccb67c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccb6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccb6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccb6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccb5020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccb51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x2aae3cccf568" loc="77:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x2aae3cccf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cccf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cccfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cccfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cccfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccce020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccce330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccce4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccce640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccce7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccce950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cccead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cccec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cccd020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cccd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x2aae3ccf3970" loc="144:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x2aae3ccf3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccf3cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccf3e48"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccf2020"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccf21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccf2330"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccf24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccf2640"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccf27c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccf2950"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccf2ad8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccf2c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccf2de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccf1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccf12a8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccf1430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x2aae3cd2e558" loc="162:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x2aae3cd2e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd2e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd2ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd2ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd2ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd2d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd2d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd2d330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd2d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd2d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd2d7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd2d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd2dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd2dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd2c020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd2c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x2aae3cd22558" loc="169:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x2aae3cd22558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd228a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd22a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd22bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd22d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd21020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd21330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd214b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd21640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd217c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd21950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd21ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd21c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd20020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x2aae3cd0c560" loc="155:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x2aae3cd0c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd0c8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd0ca38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd0cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd0cd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd0b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd0b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd0b330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd0b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd0b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd0b7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd0b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd0bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd0bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd0a020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd0a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x2aae3cccb568" loc="82:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x2aae3cccb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cccbab8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cccbc40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cccbdc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccca020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccca1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccca330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccca4b8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccca640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccca7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccca950"/>
        <function-ref name="set" scoped="" ref="0x2aae3cccaad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cccac60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cccade8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccc9120"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccc92a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x2aae3cce3568" loc="95:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x2aae3cce3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cce38b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cce3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cce3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cce3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cce2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cce21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cce2330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cce24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cce2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cce27c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cce2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cce2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cce2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cce1020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cce11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x2aae3cd01568" loc="106:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x2aae3cd01568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd018b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd01a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd01bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd01d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd00020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd00330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd004b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd00640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd007c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd00950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd00ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd00c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccff020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x2aae3cd2c558" loc="163:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x2aae3cd2c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd2c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd2ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd2cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd2cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd2b020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd2b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd2b330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd2b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd2b640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd2b7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd2b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd2bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd2bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd2a020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd2a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x2aae3cd12558" loc="152:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x2aae3cd12558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd128a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd12a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd12bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd12d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd11020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd11330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd114b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd11640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd117c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd11950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd11ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd11c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd10020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x2aae3cc9a568" loc="54:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x2aae3cc9a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc9a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc9aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cc9abc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc9ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc99020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cc991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc99330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cc99640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cc997c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc99950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cc99ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cc99c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cc98020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x2aae3ccb1568" loc="67:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x2aae3ccb1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccb18b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccb1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccb1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccb1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccb0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccb01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccb0330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccb04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccb0640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccb07c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccb0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccb0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccb0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccaf020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccaf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x2aae3ccd7568" loc="104:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x2aae3ccd7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccd78b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccd7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccd7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccd7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccd6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccd61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccd6330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccd64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccd6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccd67c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccd6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccd6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccd6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccd5020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccd51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x2aae3ccad568" loc="72:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x2aae3ccad568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccad8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccada40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccadbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccadd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccac020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccac330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccac4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccac640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccac7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccac950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccacad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccacc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccab020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x2aae3ccc5568" loc="85:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x2aae3ccc5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccc58b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccc5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccc5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccc5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccc4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccc41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccc4330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccc44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccc4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccc47c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccc4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccc4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccc4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccc3020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccc31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x2aae3ccdd568" loc="98:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x2aae3ccdd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccdd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccdda40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccddbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccddd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccdc020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccdc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccdc330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccdc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccdc640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccdc7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccdc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccdcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccdcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccdb020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccdb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x2aae3ccfb568" loc="109:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x2aae3ccfb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccfb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccfba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccfbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccfbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccfa020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccfa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccfa330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccfa4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccfa640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccfa7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccfa950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccfaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccfac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccf9020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccf91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x2aae3cd0e560" loc="154:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x2aae3cd0e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd0e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd0ea38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd0ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd0ed48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd0d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd0d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd0d330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd0d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd0d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd0d7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd0d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd0dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd0dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd0c020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x2aae3cca25a8" loc="49:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x2aae3cca25a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cca28f8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cca2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cca2c08"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cca2d90"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc81020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cc811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc81330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cc81640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cc817c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc81950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cc81ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cc81c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cc80020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x2aae3ccbb568" loc="62:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x2aae3ccbb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccbb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccbba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccbbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccbbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccba020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccba330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccba4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccba640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccba7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccba950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccbaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccbac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccb9020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccb91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x2aae3ccd3568" loc="75:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x2aae3ccd3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccd38b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccd3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccd3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccd3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccd2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccd21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccd2330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccd24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccd2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccd27c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccd2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccd2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccd2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccd1020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccd11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x2aae3ccbf568" loc="88:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x2aae3ccbf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccbf8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccbfa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccbfbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccbfd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccbe020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccbe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccbe330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccbe4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccbe640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccbe7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccbe950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccbead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccbec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccea020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x2aae3cd0a560" loc="156:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x2aae3cd0a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd0a8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd0aa38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd0abc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd0ad48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd09020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd09330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd094b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd09640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd097c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd09950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd09ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd09c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd08020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x2aae3cd04558" loc="160:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x2aae3cd04558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd048a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd04a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd04bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd04d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd03020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd03330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd034b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd03640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd037c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd03950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd03ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd03c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd02020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x2aae3cd26558" loc="166:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x2aae3cd26558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd268a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd26a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd26bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd26d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd25020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd25330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd254b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd25640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd257c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd25950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd25ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd25c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd24020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x2aae3cce7568" loc="93:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x2aae3cce7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cce78b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cce7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cce7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cce7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cce6020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cce61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cce6330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cce64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cce6640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cce67c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cce6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cce6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cce6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cce5020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cce51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x2aae3cd08560" loc="157:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x2aae3cd08560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd088b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd08a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd08bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd08d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd07020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd07330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd074b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd07640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd077c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd07950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd07ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd07c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd06020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x2aae3cc9e568" loc="52:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x2aae3cc9e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc9e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc9ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cc9ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc9ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc9d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cc9d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc9d330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc9d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cc9d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cc9d7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc9d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cc9dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cc9dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cc9c020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x2aae3ccb5568" loc="65:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x2aae3ccb5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccb58b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccb5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccb5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccb5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccb4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccb41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccb4330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccb44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccb4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccb47c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccb4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccb4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccb4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccb3020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccb31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x2aae3cccd568" loc="78:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x2aae3cccd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cccd8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cccda40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cccdbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cccdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cccc020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cccc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cccc330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cccc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cccc640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cccc7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cccc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccccad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccccc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cccb020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cccb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x2aae3cd10560" loc="153:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x2aae3cd10560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd108b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd10a38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd10bc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd10d48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd0f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd0f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd0f330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd0f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd0f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd0f7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd0f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd0fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd0fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd0e020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x2aae3cd2a558" loc="164:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x2aae3cd2a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd2a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd2aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd2abb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd2ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd29020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd29330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd294b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd29640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd297c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd29950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd29ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd29c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd28020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x2aae3ccc9668" loc="83:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x2aae3ccc9668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccc99b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccc9b40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccc9cc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccc9e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccc8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccc81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccc8330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccc84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccc8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccc87c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccc8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccc8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccc8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccc7020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccc71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x2aae3cce1568" loc="96:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x2aae3cce1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cce18b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cce1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cce1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cce1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cce0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cce01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cce0330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cce04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cce0640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cce07c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cce0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cce0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cce0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccdf020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccdf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x2aae3ccff568" loc="107:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x2aae3ccff568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccff8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccffa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccffbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccffd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccfe020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccfe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccfe330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccfe4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccfe640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccfe7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccfe950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccfead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccfec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccfd020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccfd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x2aae3cc98568" loc="55:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x2aae3cc98568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc988b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc98a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cc98bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc98d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc97020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cc971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc97330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cc97640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cc977c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc97950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cc97ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cc97c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cc96020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cc961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x2aae3ccd5568" loc="105:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x2aae3ccd5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccd58b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccd5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccd5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccd5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccd41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccd4330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccd44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccd4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccd47c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccd4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccd4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccd4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd01020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x2aae3cc94568" loc="60:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x2aae3cc94568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc948b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc94a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cc94bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc94d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cc92020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cc921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cc92330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cc924b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cc92640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cc927c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cc92950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cc92ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cc92c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccbd020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccbd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x2aae3ccab568" loc="73:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x2aae3ccab568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccab8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccaba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccabbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccabd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccaa020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccaa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccaa330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccaa4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccaa640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccaa7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccaa950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccaaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccaac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cca9020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cca91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x2aae3ccc3568" loc="86:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x2aae3ccc3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccc38b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccc3a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccc3bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccc3d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccc2020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccc21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccc2330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccc24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccc2640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccc27c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccc2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccc2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccc2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccc1020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccc11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x2aae3ccdb568" loc="99:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x2aae3ccdb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccdb8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccdba40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccdbbc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccdbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccda020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccda1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccda330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccda4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccda640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccda7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccda950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccdaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccdac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccd9020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccd91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x2aae3ccf9568" loc="110:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x2aae3ccf9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccf98b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccf9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccf9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccf9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccf8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccf81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccf8330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccf84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccf8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccf87c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccf8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccf8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccf8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccf7020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccf71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x2aae3cc80568" loc="50:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x2aae3cc80568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cc808b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cc80a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cc80bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cc80d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cca1020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cca11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cca1330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cca14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cca1640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cca17c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cca1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cca1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cca1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cca0020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cca01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x2aae3ccb9568" loc="63:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x2aae3ccb9568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccb98b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccb9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccb9bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccb9d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccb8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccb81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccb8330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccb84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccb8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccb87c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccb8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccb8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccb8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccb7020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccb71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x2aae3ccd1568" loc="76:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x2aae3ccd1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccd18b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccd1a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccd1bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccd1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccd0020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccd01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccd0330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccd04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccd0640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccd07c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccd0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccd0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccd0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cccf020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cccf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x2aae3ccea568" loc="89:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x2aae3ccea568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccea8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cceaa40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cceabc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccead50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cce8020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cce81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cce8330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cce84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cce8640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cce87c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cce8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cce8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cce8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cce7020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cce71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x2aae3cceb548" loc="148:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x2aae3cceb548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cceb898"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cceba20"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccebba8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccebd30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd18020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd18330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd184b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd18640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd187c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd18950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd18ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd18c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd17020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x2aae3cd02558" loc="161:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x2aae3cd02558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd028a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd02a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd02bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd02d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd2f020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd2f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd2f330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd2f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd2f640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd2f7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd2f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd2fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd2fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd2e020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd2e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x2aae3cced560" loc="147:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x2aae3cced560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cced8b0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cceda38"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccedbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccedd48"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccec020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccec330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccec4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccec640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccec7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccec950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccecad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccecc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cceb020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cceb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x2aae3cce5568" loc="94:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x2aae3cce5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cce58b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cce5a40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cce5bc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cce5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cce4020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cce41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cce4330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cce44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cce4640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cce47c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cce4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cce4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cce4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cce3020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cce31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x2aae3cd24558" loc="168:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x2aae3cd24558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd248a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd24a30"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd24bb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd24d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd23020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd23330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd234b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd23640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd237c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd23950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd23ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd23c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd22020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x2aae3cd1e568" loc="172:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x2aae3cd1e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd1e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd1ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd1ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd1ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd1d020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd1d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd1d330"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd1d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd1d640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd1d7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd1d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd1dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd1dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd1c020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd1c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x2aae3ccf55b8" loc="143:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x2aae3ccf55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ccf5d08"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ccf4020"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ccf41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ccf4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ccf44b8"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ccf4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ccf47c8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ccf4950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ccf4ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ccf4c60"/>
        <function-ref name="set" scoped="" ref="0x2aae3ccf4de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ccf3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ccf31a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ccf3430"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ccf35b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd1ae18" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd1ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd4f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd4f330"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd4f4b8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd4f640"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd4f7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd4f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd4fad8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd4fc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd4fde8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd4e020"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd4e1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd4e330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd4e4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd4e740"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd4e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd4b478" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd4b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd4b7c8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd4b950"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd4bad8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd4bc60"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd4bde8"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd4a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd4a1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd4a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd4a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd4a640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd4a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd4a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd4aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd4ad60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd47ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd47ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd76020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd761a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd76330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd764b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd76640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd767c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd76950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd76ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd76c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd76de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd75020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd751a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd75330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd755b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd75740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd723d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd723d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd72728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd728b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd72a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd72bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd72d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd71020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd711a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd71330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd714b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd71640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd717c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd71950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd71ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd71d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd6eca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd6eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd6d020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd6d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd6d330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd6d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd6d640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd6d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd6d950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd6dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd6dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd6dde8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd6c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd6c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd6c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd6c5b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd6c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd693d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd693d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd69728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd698b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd69a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd69bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd69d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd68020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd681a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd68330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd684b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd68640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd687c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd68950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd68ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd68d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd65ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd65ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd64020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd641a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd64330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd644b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd64640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd647c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd64950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd64ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd64c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd64de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd63020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd631a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd63330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd635b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd63740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd603d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd603d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd60728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd608b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd60a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd60bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd60d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd5f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd5f1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd5f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd5f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd5f640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd5f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd5f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd5fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd5fd60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd8bca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd8bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd8a020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd8a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd8a330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd8a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd8a640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd8a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd8a950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd8aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd8ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd8ade8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd89020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd891a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd89330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd895b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd89740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd863d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd863d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd86728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd868b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd86a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd86bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd86d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd85020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd851a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd85330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd854b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd85640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd857c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd85950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd85ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd85d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd82ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd82ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd81020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd811a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd81330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd814b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd81640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd817c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd81950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd81ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd81c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd81de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd80020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd801a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd80330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd805b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd80740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd7d3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd7d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd7d728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd7d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd7da38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd7dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd7dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd7c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd7c1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd7c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd7c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd7c640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd7c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd7c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd7cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd7cd60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd79d08" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd79d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd780a0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd78228"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd783b0"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd78538"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd786c0"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd78848"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd789d0"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd78b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd78ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd78e68"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd77020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd771a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd77330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd775b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd77740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cda43d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cda43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cda4728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cda48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cda4a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cda4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cda4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cda3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cda31a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cda3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cda34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cda3640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cda37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cda3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cda3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cda3d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cda2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cda0ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cda0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd9f020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd9f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd9f330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd9f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd9f640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd9f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd9f950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd9fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd9fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd9fde8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd9e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd9e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd9e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd9e5b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd9e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd9b3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd9b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd9b728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd9b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd9ba38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd9bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd9bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd99020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd991a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd99330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd994b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd99640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd997c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd99950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd99ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd99d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd96ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd96ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd95020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd951a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd95330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd954b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd95640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd957c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd95950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd95ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd95c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd95de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd94020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd941a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd94330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd945b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd94740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cd913d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cd913d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cd91728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cd918b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cd91a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cd91bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cd91d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cd90020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cd901a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cd90330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cd904b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cd90640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cd907c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cd90950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cd90ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cd90d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cd8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdbdca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdbdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdbc020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdbc1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdbc330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdbc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdbc640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdbc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdbc950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdbcad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdbcc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdbcde8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdbb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdbb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdbb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdbb5b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdbb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdb83d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdb83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdb8728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdb88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdb8a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdb8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdb8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdb7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdb71a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdb7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdb74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdb7640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdb77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdb7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdb7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdb7d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdb4ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdb4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdb3020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdb31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdb3330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdb34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdb3640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdb37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdb3950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdb3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdb3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdb3de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdb2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdb21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdb2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdb25b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdb2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdaf3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdaf3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdaf728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdaf8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdafa38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdafbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdafd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdae1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdae330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdae4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdae640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdae7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdae950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdaead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdaed60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdabca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdabca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdaa020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdaa1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdaa330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdaa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdaa640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdaa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdaa950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdaaad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdaac60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdaade8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cda9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cda91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cda9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cda95b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cda9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdd63d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdd63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdd6728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdd68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdd6a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdd6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdd6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdd4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdd41a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdd4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdd44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdd4640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdd47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdd4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdd4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdd4d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdd1dd8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdd1dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdd0170"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdd02f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdd0480"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdd0608"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdd0790"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdd0918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdd0aa0"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdd0c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdd0db0"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdcf020"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdcf1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdcf330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdcf4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdcf740"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdcf8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdcc478" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdcc478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdcc7c8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdcc950"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdccad8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdccc60"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdccde8"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdcb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdcb1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdcb330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdcb4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdcb640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdcb7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdcb950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdcbad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdcbd60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdc8ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdc8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdc7020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdc71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdc7330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdc74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdc7640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdc77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdc7950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdc7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdc7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdc7de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdc6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdc61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdc6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdc65b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdc6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdc33d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdc33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdc3728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdc38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdc3a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdc3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdc3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdc2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdc21a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdc2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdc24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdc2640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdc27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdc2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdc2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdc2d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdbfca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdbfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdef020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdef1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdef330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdef4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdef640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdef7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdef950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdefad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdefc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdefde8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdee020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdee1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdee330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdee5b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdee740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdeb3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdeb3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdeb728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdeb8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdeba38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdebbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdebd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdea1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdea330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdea4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdea640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdea7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdea950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdeaad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdead60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cde9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cde7ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cde7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cde6020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cde61a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cde6330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cde64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cde6640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cde67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cde6950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cde6ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cde6c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cde6de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cde5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cde51a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cde5330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cde55b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cde5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cde13d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cde13d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cde1728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cde18b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cde1a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cde1bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cde1d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cde0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cde01a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cde0330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cde04b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cde0640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cde07c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cde0950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cde0ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cde0d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cddf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdddca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdddca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cddc020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cddc1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cddc330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cddc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cddc640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cddc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cddc950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cddcad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cddcc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cddcde8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cddb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cddb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cddb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cddb5b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cddb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdd83d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdd83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdd8728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdd88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdd8a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdd8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdd8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdd7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdd71a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdd7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdd74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdd7640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdd77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdd7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdd7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdd7d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce06ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce06ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce05020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce051a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce05330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce054b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce05640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce057c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce05950"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce05ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce05c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce05de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce04020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce041a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce04330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce045b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce04740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce013d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce013d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce01728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce018b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce01a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce01bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce01d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce001a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce00330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce004b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce00640"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce007c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce00950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce00ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce00d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdfdca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdfdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdfc020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdfc1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdfc330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdfc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdfc640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdfc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdfc950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdfcad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdfcc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdfcde8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdfb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdfb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdfb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdfb5b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdfb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdf83d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdf83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdf8728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdf88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdf8a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdf8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdf8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdf7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdf71a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdf7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdf74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdf7640"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdf77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdf7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdf7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdf7d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdf6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3cdf4ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3cdf4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cdf2020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cdf21a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cdf2330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cdf24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cdf2640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cdf27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cdf2950"/>
        <function-ref name="get" scoped="" ref="0x2aae3cdf2ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cdf2c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cdf2de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3cdf1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cdf11a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cdf1330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cdf15b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cdf1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce203d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce203d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce20728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce208b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce20a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce20bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce20d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce1f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce1f1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce1f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce1f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce1f640"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce1f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce1f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce1fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce1fd60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce1cca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce1cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce1b020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce1b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce1b330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce1b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce1b640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce1b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce1b950"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce1bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce1bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce1bde8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce1a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce1a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce1a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce1a5b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce1a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce173d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce173d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce17728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce178b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce17a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce17bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce17d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce16020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce161a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce16330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce164b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce16640"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce167c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce16950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce16ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce16d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce13ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce13ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce12020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce121a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce12330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce124b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce12640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce127c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce12950"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce12ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce12c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce12de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce11020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce111a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce11330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce115b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce11740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce0e3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce0e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce0e728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce0e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce0ea38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce0ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce0ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce0d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce0d1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce0d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce0d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce0d640"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce0d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce0d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce0dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce0dd60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce0aca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce0aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce09020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce091a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce09330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce094b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce09640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce097c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce09950"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce09ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce09c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce09de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce3a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce3a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce3a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce3a5b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce3a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce373d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce373d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce37728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce378b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce37a38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce37bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce37d48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce36020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce361a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce36330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce364b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce36640"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce367c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce36950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce36ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce36d60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce33ca0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce33ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce31020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce311a8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce31330"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce314b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce31640"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce317c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce31950"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce31ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce31c60"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce31de8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce30020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce301a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce30330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce305b8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce30740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2aae3ce2d3d8" loc="47:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x2aae3ce2d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce2d728"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce2d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ce2da38"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce2dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce2dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ce2c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce2c1a8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce2c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ce2c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ce2c640"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce2c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ce2c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ce2cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ce2cd60"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2aae3ce8dda0" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2aae3ce8dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ceb0170"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ceb02f8"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ceb0480"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ceb0608"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ceb0790"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ceb0918"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ceb0aa0"/>
        <function-ref name="get" scoped="" ref="0x2aae3ceb0c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ceb0db0"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ceaf020"/>
        <function-ref name="set" scoped="" ref="0x2aae3ceaf1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ceaf330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ceaf4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ceaf740"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ceaf8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2aae3ce8ec30" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2aae3ce8ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ce8d020"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ce8d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ce8d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ce8d4b8"/>
        <function-ref name="get" scoped="" ref="0x2aae3ce8d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ce8d7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ce8d950"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ce8dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2aae3ceac5f8" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2aae3ceac5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3ceac948"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3ceacad0"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3ceacc58"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ceacde0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ceab020"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3ceab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ceab330"/>
        <function-ref name="get" scoped="" ref="0x2aae3ceab4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3ceab640"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3ceab7c8"/>
        <function-ref name="set" scoped="" ref="0x2aae3ceab950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3ceabad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3ceabc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3ceaa020"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ceaa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2aae3cead448" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2aae3cead448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cead798"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cead920"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3ceadaa8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3ceadc30"/>
        <function-ref name="get" scoped="" ref="0x2aae3ceaddb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3ceac020"/>
        <function-ref name="set" scoped="" ref="0x2aae3ceac1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aae3ceac330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x2aae3cea8e20" loc="44:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x2aae3cea8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cea71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cea7330"/>
        <function-ref name="setResistor" scoped="" ref="0x2aae3cea74b8"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cea7640"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cea77c8"/>
        <function-ref name="getResistor" scoped="" ref="0x2aae3cea7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cea7ad8"/>
        <function-ref name="get" scoped="" ref="0x2aae3cea7c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x2aae3cea7de8"/>
        <function-ref name="getRaw" scoped="" ref="0x2aae3cea6020"/>
        <function-ref name="set" scoped="" ref="0x2aae3cea61a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x2aae3cea6330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x2aae3cea64b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x2aae3cea6740"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cea68c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2aae3cea9cf0" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x2aae3cea9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aae3cea80a0"/>
        <function-ref name="isInput" scoped="" ref="0x2aae3cea8228"/>
        <function-ref name="toggle" scoped="" ref="0x2aae3cea83b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aae3cea8538"/>
        <function-ref name="get" scoped="" ref="0x2aae3cea86c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aae3cea8848"/>
        <function-ref name="set" scoped="" ref="0x2aae3cea89d0"/>
        <function-ref name="clr" scoped="" ref="0x2aae3cea8b58"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/msz/github/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aae3c8d4020" loc="62:/home/msz/github/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/home/msz/github/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aae3c46d780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/msz/github/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/msz/github/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2aae3c8d8b18" loc="60:/home/msz/github/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/msz/github/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x2aae3c903c28" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x2aae3c904070" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x2aae3c903560" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x2aae3c9069a8" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x2aae3c904780" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x2aae3c909c78" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x2aae3c906328" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x2aae3c904e48" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/msz/github/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/msz/github/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2aae3c832378" loc="62:/home/msz/github/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/msz/github/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2aae3c511450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x2aae3c949748" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2aae3c9494d8" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x2aae3c956de0" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aae3c918628"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x2aae3c9164e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2aae3c948020" loc="57:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x2aae3c948e20" loc="59:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x2aae3c94bda0" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2aae3c9486f8" loc="58:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2aae3c94c570" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x2aae3c94cc98" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2aae3c94b690" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aae3c918628"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2aae3c9164e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2aae3c94b420" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aae3c918628"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x2aae3c9164e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2aae3c95c178" loc="44:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x2aae3c959520" loc="79:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x2aae3c9592b0" loc="79:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2aae3c9580a8" loc="86:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2aae3c959dc0" loc="86:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2aae3c95ab30" loc="68:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2aae3c95a3a0" loc="63:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x2aae3c95caa0" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x2aae3c95c830" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x2aae3c965810" loc="40:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x2aae3c961290" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2aae3c961020" loc="41:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x2aae3c961bf0" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2aae3c961980" loc="42:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x2aae3c960590" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x2aae3c960320" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aae3c960c18" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2aae3c9526f8" loc="52:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x2aae3c951e58" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x2aae3c951be8" loc="55:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x2aae3c952dc8" loc="53:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aae3c939b90" loc="45:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x2aae3c9514d8" loc="54:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2aae3c954a00" loc="47:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2aae3c952070" loc="51:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2aae3c954328" loc="46:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2aae3c9530d8" loc="48:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x2aae3c953978" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2aae3c953708" loc="50:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x2aae3c94f830" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x2aae3c94f5c0" loc="56:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2aae3bb14b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2aae3c996db0" loc="39:/home/msz/github/tinyos/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/msz/github/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/msz/github/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2aae3c897a28" loc="76:/home/msz/github/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/msz/github/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/msz/github/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/msz/github/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2aae3c4e9d10" loc="52:/home/msz/github/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/msz/github/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aae3c463020" loc="57:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2aae3c462020" loc="72:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2aae3c463738" loc="65:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/msz/github/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2aae3c46aba0" loc="67:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aae3c46d780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2aae3c4693e0" loc="75:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/msz/github/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aae3caa9338" loc="53:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aae3caa9338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2aae3caa1020" loc="136:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aae3caa6710" loc="83:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2aae3caa45b8" loc="114:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aae3caa4020" loc="114:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2aae3caa4338" loc="114:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2aae3caa57b8" loc="98:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2aae3caa0020" loc="151:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2aae3caa1740" loc="144:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2aae3caa5020" loc="92:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2aae3caa9e08" loc="64:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aae3caa9b98" loc="64:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2aae3caa25b8" loc="129:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aae3caa2020" loc="129:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2aae3caa2338" loc="129:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2aae3caa78a0" loc="73:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aae3caa7630" loc="73:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aae3caa6070" loc="78:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/msz/github/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/msz/github/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2aae3cabb070" loc="61:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2aae3cabb7a8" loc="67:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2aae3cab9020" loc="72:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2aae3cab9e70" loc="83:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2aae3cab7480" loc="100:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aae3cab7c18" loc="117:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2aae3cab9738" loc="77:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aae3cab6768" loc="134:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2aae3cab64f8" loc="134:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2aae3cabc900" loc="56:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2aae3cab8608" loc="89:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2aae3cab8d20" loc="94:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/msz/github/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aae3cae3bf0" loc="53:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aae3cae3bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2aae3cade4c8" loc="61:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/msz/github/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x2aae3bb15020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aae3cad93e8" loc="56:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aae3cad93e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aae3cad9618" loc="56:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2aae3cad4020" loc="109:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aae3cad6070" loc="78:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2aae3cad55c0" loc="103:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aae3cad5020" loc="103:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2aae3cad5340" loc="103:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2aae3cad67e0" loc="88:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2aae3cad47a0" loc="116:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aae3cad8108" loc="66:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aae3cad9e68" loc="66:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cad9618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aae3cad88d8" loc="73:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/msz/github/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aae3cb563f8" loc="57:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aae3cb563f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aae3cb56628" loc="57:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cb56628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2aae3cb55020" loc="64:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aae3cb56628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2aae3cb54070" loc="76:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2aae3cb55838" loc="71:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2aae3cb54760" loc="82:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/msz/github/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2aae3cc79828" loc="44:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2aae3cc78020" loc="45:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2aae3cc7ba70" loc="42:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2aae3cc78db0" loc="47:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aae3cc79178" loc="43:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2aae3cc786d8" loc="46:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aae3cc52d38" loc="40:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2aae3cc7b3e0" loc="41:/home/msz/github/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/msz/github/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2aae3cc7c9c0" loc="78:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2aae3cca70d8" loc="80:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x2aae3cca3910" loc="110:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aae3c46d780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2aae3cca36a0" loc="110:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2aae3cc7e3a0" loc="58:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2aae3cca6020" loc="87:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x2aae3cca21d8" loc="117:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2aae3cca77b0" loc="85:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aae3cc7c290" loc="73:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x2aae3cca4710" loc="99:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x2aae3cc7eac8" loc="66:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aae3bb14790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aae3cc7f5d0" loc="48:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x2aae3cca6738" loc="92:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x2aae3cca4e38" loc="101:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x2aae3cca4020" loc="94:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aae3c45a1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2aae3cc7fc90" loc="53:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/msz/github/tinyos/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
